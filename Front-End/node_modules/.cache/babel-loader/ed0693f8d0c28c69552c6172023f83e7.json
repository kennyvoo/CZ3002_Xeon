{"ast":null,"code":"var _jsxFileName = \"D:\\\\Projects\\\\CZ3002-Lab-SmartLib\\\\CZ3002_Xeon\\\\Front-End\\\\src\\\\components\\\\seatmap\\\\SeatsList.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext } from 'react';\nimport Seat from \"./Seat\";\nimport { SelectedSeatContext, SelectSeatContext } from '../../contexts/SelectSeatContext';\nimport GridLines from \"./GridLines\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function SeatsList(props) {\n  _s();\n\n  const [select, setSelect] = useContext(SelectedSeatContext);\n\n  function editMode(mode) {\n    if (mode) return /*#__PURE__*/_jsxDEV(GridLines, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 25\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"svg\", {\n    viewBox: \"0 0 800 800\",\n    children: [editMode(props.editmode), /*#__PURE__*/_jsxDEV(\"rect\", {\n      className: 'mapBorder',\n      x: 1,\n      y: 1,\n      rx: 15,\n      ry: 15,\n      width: 800 - 2,\n      height: 800 - 2,\n      fill: \"none\",\n      stroke: \"#CCCCCC\",\n      strokeWidth: \"2px\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }, this), props.seats.map(seat => {\n      return select.level == seat.level ? /*#__PURE__*/_jsxDEV(Seat, {\n        seat: seat\n      }, seat.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 56\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {}, seat.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 93\n      }, this); //return (<Seat seat={seat} key={seat.id} />);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 9\n  }, this);\n}\n\n_s(SeatsList, \"ek9CEhCG4zcMDheZwvRzZ16a8cI=\");\n\n_c = SeatsList;\nexport default SeatsList;\n\nvar _c;\n\n$RefreshReg$(_c, \"SeatsList\");","map":{"version":3,"sources":["D:/Projects/CZ3002-Lab-SmartLib/CZ3002_Xeon/Front-End/src/components/seatmap/SeatsList.js"],"names":["React","useContext","Seat","SelectedSeatContext","SelectSeatContext","GridLines","SeatsList","props","select","setSelect","editMode","mode","editmode","seats","map","seat","level","id"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,SAASC,mBAAT,EAA8BC,iBAA9B,QAAuD,kCAAvD;AACA,OAAOC,SAAP,MAAsB,aAAtB;;AAEA,OAAO,SAASC,SAAT,CAAmBC,KAAnB,EAA0B;AAAA;;AAE7B,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBR,UAAU,CAACE,mBAAD,CAAtC;;AAEA,WAASO,QAAT,CAAkBC,IAAlB,EACA;AACI,QAAGA,IAAH,EAAS,oBAAO,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA,YAAP;AACZ;;AACD,sBACI;AAAK,IAAA,OAAO,EAAC,aAAb;AAAA,eACKD,QAAQ,CAACH,KAAK,CAACK,QAAP,CADb,eAEI;AAAM,MAAA,SAAS,EAAE,WAAjB;AAA8B,MAAA,CAAC,EAAE,CAAjC;AAAoC,MAAA,CAAC,EAAE,CAAvC;AAA0C,MAAA,EAAE,EAAE,EAA9C;AAAkD,MAAA,EAAE,EAAE,EAAtD;AAA0D,MAAA,KAAK,EAAE,MAAI,CAArE;AAAwE,MAAA,MAAM,EAAE,MAAI,CAApF;AAAuF,MAAA,IAAI,EAAC,MAA5F;AAAmG,MAAA,MAAM,EAAC,SAA1G;AAAoH,MAAA,WAAW,EAAC;AAAhI;AAAA;AAAA;AAAA;AAAA,YAFJ,EAGKL,KAAK,CAACM,KAAN,CAAYC,GAAZ,CAAiBC,IAAD,IAAU;AACvB,aAASP,MAAM,CAACQ,KAAP,IAAgBD,IAAI,CAACC,KAAtB,gBAA+B,QAAC,IAAD;AAAM,QAAA,IAAI,EAAED;AAAZ,SAAuBA,IAAI,CAACE,EAA5B;AAAA;AAAA;AAAA;AAAA,cAA/B,gBAAoE,mBAAUF,IAAI,CAACE,EAAf;AAAA;AAAA;AAAA;AAAA,cAA5E,CADuB,CAEvB;AACH,KAHA,CAHL;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAUH;;GAlBeX,S;;KAAAA,S;AAoBhB,eAAeA,SAAf","sourcesContent":["import React, { useContext } from 'react'\r\nimport Seat from \"./Seat\";\r\nimport { SelectedSeatContext, SelectSeatContext } from '../../contexts/SelectSeatContext';\r\nimport GridLines from \"./GridLines\";\r\n\r\nexport function SeatsList(props) {\r\n    \r\n    const [select, setSelect] = useContext(SelectedSeatContext);\r\n\r\n    function editMode(mode)\r\n    {\r\n        if(mode) return <GridLines/>\r\n    }\r\n    return (\r\n        <svg viewBox='0 0 800 800'>\r\n            {editMode(props.editmode)}\r\n            <rect className={'mapBorder'} x={1} y={1} rx={15} ry={15} width={800-2} height={800-2} fill='none' stroke='#CCCCCC' strokeWidth='2px' />\r\n            {props.seats.map((seat) => {\r\n                return ((select.level == seat.level) ? <Seat seat={seat} key={seat.id} /> : <div key={seat.id}></div>);\r\n                //return (<Seat seat={seat} key={seat.id} />);\r\n            })}\r\n        </svg>\r\n    );\r\n}\r\n\r\nexport default SeatsList\r\n"]},"metadata":{},"sourceType":"module"}