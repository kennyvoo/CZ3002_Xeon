{"ast":null,"code":"var _jsxFileName = \"D:\\\\Projects\\\\CZ3002-Lab-SmartLib\\\\CZ3002_Xeon\\\\Front-End\\\\src\\\\components\\\\Stats.js\";\nimport React, { useState } from 'react';\nimport Chart from 'react-google-charts';\nimport { Pane } from \"evergreen-ui\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Stats(props) {\n  // const [title, setTitle]=useState('');\n  // console.log(props.statsSel.val)\n  //\n  // switch (props.statsSel.val)\n  // {\n  //     case 0: setTitle('Overall');\n  //     case 2: setTitle('Level 2');\n  //     case 3: setTitle('Level 3');\n  //     case 4: setTitle('Level 4');\n  //     case 5: setTitle('Level 5');\n  // }\n  function countStats(seats) {\n    var stats = {\n      total: 0,\n      avail: 0,\n      occupied: 0,\n      reserved: 0,\n      hogged: 0,\n      unavail: 0\n    };\n    var i;\n    let currSeats = seats.f;\n    stats.total = seats.length;\n\n    for (i = 0; i < seats.length; i++) {\n      if (seats[i].unavailable == true) stats.unavail++;else {\n        if (seats[i].status == 'Available') stats.avail++;else if (seats[i].status == 'Occupied') stats.occupied++;else if (seats[i].status == 'Reserved') stats.reserved++;else if (seats[i].status == 'Hogged') stats.hogged++;\n      }\n    }\n\n    return stats;\n  }\n\n  const levelSeats = props.statsSel.val == 0 ? props.seats : props.seats.filter(seat => seat.level === props.statsSel.val); // console.log(props.statsSel);\n  // console.log(props.seats);\n\n  console.log(levelSeats);\n  let stats = countStats(levelSeats);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Pane, {\n      width: 600,\n      children: /*#__PURE__*/_jsxDEV(Chart, {\n        className: 'statsChart',\n        width: 600,\n        height: 500,\n        chartType: \"PieChart\",\n        loader: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"Loading Chart\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 27\n        }, this),\n        data: [['Status', 'No. of Seats'], ['Available', stats.avail], ['Reserved', stats.reserved], ['Occupied', stats.occupied], ['Hogged', stats.hogged], ['Unavailable', stats.unavail]],\n        rootProps: {\n          'data-testid': '1'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 15\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [\"Total: \", levelSeats.length]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [\"Available: \", stats.avail]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [\"Reserved: \", stats.reserved]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [\"Occupied: \", stats.occupied]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [\"Hogged: \", stats.hogged]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [\"Unavailable: \", stats.unavail]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [\"Added up check: \", stats.avail + stats.reserved + stats.occupied + stats.hogged + stats.unavail]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 7\n  }, this);\n}\n_c = Stats;\n\nvar _c;\n\n$RefreshReg$(_c, \"Stats\");","map":{"version":3,"sources":["D:/Projects/CZ3002-Lab-SmartLib/CZ3002_Xeon/Front-End/src/components/Stats.js"],"names":["React","useState","Chart","Pane","Stats","props","countStats","seats","stats","total","avail","occupied","reserved","hogged","unavail","i","currSeats","f","length","unavailable","status","levelSeats","statsSel","val","filter","seat","level","console","log"],"mappings":"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","sourcesContent":["import React, {useState} from 'react'\r\nimport Chart from 'react-google-charts'\r\nimport {\r\n    Pane,\r\n} from \"evergreen-ui\";\r\n\r\nexport default function Stats(props){\r\n\r\n    // const [title, setTitle]=useState('');\r\n    // console.log(props.statsSel.val)\r\n    //\r\n    // switch (props.statsSel.val)\r\n    // {\r\n    //     case 0: setTitle('Overall');\r\n    //     case 2: setTitle('Level 2');\r\n    //     case 3: setTitle('Level 3');\r\n    //     case 4: setTitle('Level 4');\r\n    //     case 5: setTitle('Level 5');\r\n    // }\r\n\r\n    function countStats(seats) {\r\n        var stats = {total: 0, avail: 0,occupied: 0, reserved: 0, hogged: 0, unavail: 0,};\r\n        var i;\r\n        let currSeats= seats.f\r\n        stats.total=seats.length;\r\n        for (i = 0; i < seats.length; i++){\r\n            if(seats[i].unavailable==true) stats.unavail++;\r\n            else\r\n            {\r\n                if (seats[i].status == 'Available') stats.avail++;\r\n                else if (seats[i].status == 'Occupied') stats.occupied++;\r\n                else if (seats[i].status == 'Reserved') stats.reserved++;\r\n                else if (seats[i].status == 'Hogged') stats.hogged++;\r\n            }\r\n\r\n        }\r\n        return (stats);\r\n    }\r\n\r\n    const levelSeats = (props.statsSel.val==0 ? props.seats : props.seats.filter(seat => seat.level === props.statsSel.val));\r\n    // console.log(props.statsSel);\r\n    // console.log(props.seats);\r\n    console.log(levelSeats);\r\n    let stats = countStats(levelSeats);\r\n\r\n    return(\r\n      <div>\r\n          <Pane width={600}>\r\n              <Chart\r\n                  className={'statsChart'}\r\n                  width={600}\r\n                  height={500}\r\n                  chartType=\"PieChart\"\r\n                  loader={<div>Loading Chart</div>}\r\n                  data={[\r\n                      ['Status', 'No. of Seats'],\r\n                      ['Available', stats.avail],\r\n                      ['Reserved', stats.reserved],\r\n                      ['Occupied', stats.occupied],\r\n                      ['Hogged', stats.hogged],\r\n                      ['Unavailable', stats.unavail],\r\n                  ]}\r\n                  rootProps={{ 'data-testid': '1' }}\r\n              />\r\n          </Pane>\r\n          <h3>Total: {levelSeats.length}</h3>\r\n          <h3>Available: {stats.avail}</h3>\r\n          <h3>Reserved: {stats.reserved}</h3>\r\n          <h3>Occupied: {stats.occupied}</h3>\r\n          <h3>Hogged: {stats.hogged}</h3>\r\n          <h3>Unavailable: {stats.unavail}</h3>\r\n          <h3>Added up check: {stats.avail+stats.reserved+stats.occupied+stats.hogged+stats.unavail}</h3>\r\n      </div>\r\n    );\r\n}"]},"metadata":{},"sourceType":"module"}