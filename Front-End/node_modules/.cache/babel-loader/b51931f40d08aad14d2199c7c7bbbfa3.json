{"ast":null,"code":"var _jsxFileName = \"D:\\\\Projects\\\\CZ3002-Lab-SmartLib\\\\CZ3002_Xeon\\\\Front-End\\\\src\\\\context\\\\AuthContext.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useContext, useState, useEffect } from 'react';\nimport { auth } from \"../firebase\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/React.createContext();\nexport function useAuth() {\n  _s();\n\n  return useContext(AuthContext);\n}\n\n_s(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n\nexport function AuthProvider({\n  children\n}) {\n  _s2();\n\n  const [currentUser, setCurrentUser] = useState();\n  const [loading, setLoading] = useState(true);\n\n  function signup(email, password) {\n    return auth.createUserWithEmailAndPassword(email, password);\n  }\n\n  function login(email, password) {\n    return auth.signInWithEmailAndPassword(email, password);\n  }\n\n  function logout() {\n    return auth.signOut();\n  }\n\n  function resetPassword(email) {\n    return auth.send;\n  }\n\n  useEffect(() => {\n    //We only want to run this when we mount our component, so we use useEffect\n    const unsubscribe = auth.onAuthStateChanged(user => {\n      // Once done we want to unsubscribe\n      setCurrentUser(user);\n      setLoading(false);\n    });\n    return unsubscribe; //Will unsubscribe the auth componenet when we unmount this component\n  }, []); // Place to export the functions\n\n  const value = {\n    currentUser,\n    login,\n    signup,\n    logout\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: !loading && children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 9\n  }, this) //If we are not loading then we render out the children\n  ;\n}\n\n_s2(AuthProvider, \"1cdeWWSmbSz3cOWqWLAt+Ta4DMY=\");\n\n_c = AuthProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"sources":["D:/Projects/CZ3002-Lab-SmartLib/CZ3002_Xeon/Front-End/src/context/AuthContext.js"],"names":["React","useContext","useState","useEffect","auth","AuthContext","createContext","useAuth","AuthProvider","children","currentUser","setCurrentUser","loading","setLoading","signup","email","password","createUserWithEmailAndPassword","login","signInWithEmailAndPassword","logout","signOut","resetPassword","send","unsubscribe","onAuthStateChanged","user","value"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAeC,UAAf,EAA2BC,QAA3B,EAAqCC,SAArC,QAAqD,OAArD;AACA,SAAQC,IAAR,QAAmB,aAAnB;;AAEA,MAAMC,WAAW,gBAAGL,KAAK,CAACM,aAAN,EAApB;AAEA,OAAO,SAASC,OAAT,GAAmB;AAAA;;AACtB,SAAON,UAAU,CAACI,WAAD,CAAjB;AACH;;GAFeE,O;;AAIhB,OAAO,SAASC,YAAT,CAAsB;AAACC,EAAAA;AAAD,CAAtB,EAAkC;AAAA;;AACrC,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCT,QAAQ,EAA9C;AACA,QAAM,CAACU,OAAD,EAAUC,UAAV,IAAwBX,QAAQ,CAAC,IAAD,CAAtC;;AAEA,WAASY,MAAT,CAAgBC,KAAhB,EAAuBC,QAAvB,EAAiC;AAC7B,WAAOZ,IAAI,CAACa,8BAAL,CAAoCF,KAApC,EAA2CC,QAA3C,CAAP;AACH;;AAED,WAASE,KAAT,CAAeH,KAAf,EAAsBC,QAAtB,EAAgC;AAC5B,WAAOZ,IAAI,CAACe,0BAAL,CAAgCJ,KAAhC,EAAuCC,QAAvC,CAAP;AACH;;AAED,WAASI,MAAT,GAAkB;AACd,WAAOhB,IAAI,CAACiB,OAAL,EAAP;AACH;;AAED,WAASC,aAAT,CAAuBP,KAAvB,EAA8B;AAC1B,WAAOX,IAAI,CAACmB,IAAZ;AACH;;AAEDpB,EAAAA,SAAS,CAAC,MAAM;AAAE;AACd,UAAMqB,WAAW,GAAGpB,IAAI,CAACqB,kBAAL,CAAwBC,IAAI,IAAI;AAAE;AAClDf,MAAAA,cAAc,CAACe,IAAD,CAAd;AACAb,MAAAA,UAAU,CAAC,KAAD,CAAV;AAEH,KAJmB,CAApB;AAMA,WAAOW,WAAP,CAPY,CAOO;AACtB,GARQ,EAQN,EARM,CAAT,CApBqC,CA8BrC;;AACA,QAAMG,KAAK,GAAG;AACdjB,IAAAA,WADc;AAEdQ,IAAAA,KAFc;AAGdJ,IAAAA,MAHc;AAIdM,IAAAA;AAJc,GAAd;AAMA,sBACI,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAEO,KAA7B;AAAA,cACK,CAACf,OAAD,IAAYH;AADjB;AAAA;AAAA;AAAA;AAAA,UADJ,CAG4B;AAH5B;AAKH;;IA1CeD,Y;;KAAAA,Y","sourcesContent":["import React, {useContext, useState, useEffect} from 'react'\r\nimport {auth} from \"../firebase\"\r\n\r\nconst AuthContext = React.createContext()\r\n\r\nexport function useAuth() {\r\n    return useContext(AuthContext)\r\n}\r\n\r\nexport function AuthProvider({children}) {\r\n    const [currentUser, setCurrentUser] = useState()\r\n    const [loading, setLoading] = useState(true)\r\n\r\n    function signup(email, password) {\r\n        return auth.createUserWithEmailAndPassword(email, password)\r\n    }\r\n\r\n    function login(email, password) {\r\n        return auth.signInWithEmailAndPassword(email, password)\r\n    }\r\n\r\n    function logout() {\r\n        return auth.signOut()\r\n    }\r\n\r\n    function resetPassword(email) {\r\n        return auth.send\r\n    }\r\n\r\n    useEffect(() => { //We only want to run this when we mount our component, so we use useEffect\r\n        const unsubscribe = auth.onAuthStateChanged(user => { // Once done we want to unsubscribe\r\n            setCurrentUser(user)\r\n            setLoading(false)\r\n            \r\n        })\r\n\r\n        return unsubscribe //Will unsubscribe the auth componenet when we unmount this component\r\n    }, [])\r\n    \r\n    // Place to export the functions\r\n    const value = {\r\n    currentUser,\r\n    login,\r\n    signup,\r\n    logout\r\n}\r\n    return (\r\n        <AuthContext.Provider value={value}>\r\n            {!loading && children}  \r\n        </AuthContext.Provider> //If we are not loading then we render out the children\r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}