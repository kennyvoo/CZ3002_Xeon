{"ast":null,"code":"var _jsxFileName = \"D:\\\\Projects\\\\CZ3002-Lab-SmartLib\\\\CZ3002_Xeon\\\\Front-End\\\\src\\\\components\\\\MapSelectorPane.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useContext } from \"react\";\nimport { Pane, Text, Button, Heading, SegmentedControl, Dialog, ErrorIcon, HandUpIcon } from \"evergreen-ui\";\nimport Component from \"@reactions/component\";\nimport { SeatContext } from '../contexts/SeatContext';\nimport { SelectedSeatContext } from '../contexts/SelectSeatContext';\nimport { useHistory } from \"react-router-dom\";\nimport SeatsList from \"./seatmap/SeatsList\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction MapSelectorPane() {\n  _s();\n\n  const [seats, setSeats] = useContext(SeatContext);\n  const [selected, setSelected] = useContext(SelectedSeatContext);\n  const history = useHistory();\n\n  function occupancy(keyword) {\n    var avail = 0;\n    var total = seats.length;\n    var i;\n\n    for (i = 0; i < seats.length; i++) {\n      if (seats[i].status == keyword) avail++;\n    }\n\n    return avail / total * 100;\n  }\n\n  function countSeats(keyword) {\n    var num = 0;\n    var i;\n\n    for (i = 0; i < seats.length; i++) {\n      if (keyword == 'Unavailable') {\n        if (seats[i].unavailable == true) num++;\n      } else {\n        if (seats[i].status == keyword && seats[i].unavailable == false) num++;\n      }\n    }\n\n    return num;\n  } // console.log(seats[0].status);\n\n\n  function clickBook() {\n    console.log(\"Booked\");\n    history.push('/SeatInformation');\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Heading, {\n      padding: 10,\n      size: 700,\n      children: [\"The library has \", seats.length, \" seats in total.\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Heading, {\n      padding: 10,\n      size: 700,\n      children: [\"The library has \", countSeats('Available'), \" available seats, \", countSeats('Reserved'), \" reserved seats, \", countSeats('Occupied'), \" occupied seats, \", countSeats('Hogged'), \" hogged seats, \", countSeats('Unavailable'), \" unavailable seats.\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Heading, {\n      padding: 10,\n      size: 700,\n      children: [\"The library is currently \", occupancy('Available'), \"% full.\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Component, {\n      initialState: {\n        options: [{\n          label: \"Level 2\",\n          value: 2\n        }, {\n          label: \"Level 3\",\n          value: 3\n        }, {\n          label: \"Level 4\",\n          value: 4\n        }, {\n          label: \"Level 5\",\n          value: 5\n        }],\n        value: selected.level\n      },\n      children: ({\n        state,\n        setState\n      }) => /*#__PURE__*/_jsxDEV(SegmentedControl, {\n        width: \"auto\",\n        marginTop: 10,\n        options: state.options,\n        value: state.value,\n        onChange: value => {\n          setState({\n            value\n          });\n          setSelected({\n            seat: 0,\n            level: value\n          });\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Pane, {\n      height: \"auto\",\n      width: \"auto\",\n      marginTop: 20,\n      background: \"tint2\",\n      border: \"default\",\n      borderRadius: 5,\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      display: \"flex\",\n      children: /*#__PURE__*/_jsxDEV(SeatsList, {\n        seats: seats,\n        editmode: false\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Selected Seat: \", selected.seat == 0 ? 'None' : selected.seat]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Selected Level: \", selected.level]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Component, {\n      initialState: {\n        isShown: false\n      },\n      children: ({\n        state,\n        setState\n      }) => /*#__PURE__*/_jsxDEV(Pane, {\n        children: [/*#__PURE__*/_jsxDEV(Dialog, {\n          isShown: state.isShown //title={\"Seat \"+ (seats.find((theSeat) => theSeat.id == selected.seat)).status}\n          ,\n          title: \"Seat Unavailable\",\n          onCloseComplete: () => setState({\n            isShown: false\n          }) //confirmLabel=\"Custom Label\"\n          ,\n          hasFooter: false,\n          children: [/*#__PURE__*/_jsxDEV(ErrorIcon, {\n            size: 30,\n            marginRight: 10\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 17\n          }, this), \"The seat you have chosen is not available for booking.\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          appearance: \"primary\",\n          iconBefore: HandUpIcon,\n          height: 40,\n          disabled: selected.seat == 0,\n          onClick: () => seats.find(theSeat => theSeat.id == selected.seat).status != \"Available\" ? setState({\n            isShown: true\n          }) : clickBook(),\n          children: \"Book\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 7\n  }, this);\n}\n\n_s(MapSelectorPane, \"qE/yEM6jZOpDPfk1wCIkJ2d4o8A=\", false, function () {\n  return [useHistory];\n});\n\n_c = MapSelectorPane;\nexport default MapSelectorPane;\n\nvar _c;\n\n$RefreshReg$(_c, \"MapSelectorPane\");","map":{"version":3,"sources":["D:/Projects/CZ3002-Lab-SmartLib/CZ3002_Xeon/Front-End/src/components/MapSelectorPane.js"],"names":["React","useState","useContext","Pane","Text","Button","Heading","SegmentedControl","Dialog","ErrorIcon","HandUpIcon","Component","SeatContext","SelectedSeatContext","useHistory","SeatsList","MapSelectorPane","seats","setSeats","selected","setSelected","history","occupancy","keyword","avail","total","length","i","status","countSeats","num","unavailable","clickBook","console","log","push","options","label","value","level","state","setState","seat","isShown","find","theSeat","id"],"mappings":"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","sourcesContent":["import React, { useState, useContext } from \"react\";\r\nimport { Pane, Text, Button, Heading, SegmentedControl, Dialog, ErrorIcon, HandUpIcon } from \"evergreen-ui\";\r\nimport Component from \"@reactions/component\";\r\nimport { SeatContext } from '../contexts/SeatContext';\r\nimport { SelectedSeatContext } from '../contexts/SelectSeatContext';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport SeatsList from \"./seatmap/SeatsList\";\r\n\r\nfunction MapSelectorPane() {\r\n  \r\n  const [seats, setSeats] = useContext(SeatContext);\r\n  const [selected, setSelected] = useContext(SelectedSeatContext);\r\n  const history = useHistory();\r\n  \r\n  function occupancy(keyword) {\r\n    var avail = 0;\r\n    var total = seats.length;\r\n    var i;\r\n    for (i = 0; i < seats.length; i++){\r\n      if (seats[i].status == keyword) avail++;\r\n    }\r\n    return (avail/total*100);\r\n  }\r\n\r\n  function countSeats(keyword) {\r\n    var num = 0;\r\n    var i;\r\n    for (i = 0; i < seats.length; i++){\r\n        if(keyword=='Unavailable')\r\n        {\r\n            if(seats[i].unavailable==true) num++;\r\n        }\r\n        else\r\n        {\r\n            if (seats[i].status == keyword && seats[i].unavailable==false) num++;\r\n        }\r\n\r\n    }\r\n    return (num);\r\n  }\r\n  // console.log(seats[0].status);\r\n\r\n  function clickBook() {\r\n    console.log(\"Booked\");\r\n    history.push('/SeatInformation');\r\n  }\r\n\r\n    return (\r\n      <div>\r\n        <Heading padding={10} size={700}>The library has {seats.length} seats in total.</Heading>\r\n        <Heading padding={10} size={700}>The library has {countSeats('Available')} available seats, {countSeats('Reserved')} reserved seats, {countSeats('Occupied')} occupied seats, {countSeats('Hogged')} hogged seats, {countSeats('Unavailable')} unavailable seats.</Heading>\r\n        <Heading padding={10} size={700}>The library is currently {occupancy('Available')}% full.</Heading>\r\n        \r\n        {/* Segmented Control Bar*/}\r\n        <Component\r\n          initialState={{\r\n            options: [\r\n              { label: \"Level 2\", value: 2 },\r\n              { label: \"Level 3\", value: 3 },\r\n              { label: \"Level 4\", value: 4 },\r\n              { label: \"Level 5\", value: 5 },\r\n            ],\r\n            value: selected.level,\r\n          }}\r\n        >\r\n          {({ state, setState }) => (\r\n            <SegmentedControl\r\n              width=\"auto\"\r\n              marginTop={10}\r\n              options={state.options}\r\n              value={state.value}\r\n              onChange={(value) => { setState({ value }); setSelected({seat:0, level: value });}}\r\n            />\r\n          )}\r\n        </Component>\r\n        \r\n        <Pane\r\n          height=\"auto\"\r\n          width=\"auto\"\r\n          marginTop={20}\r\n          background=\"tint2\"\r\n          border=\"default\"\r\n          borderRadius={5}\r\n          justifyContent=\"center\"\r\n          alignItems=\"center\"\r\n          display=\"flex\"\r\n        >\r\n            <SeatsList seats={seats} editmode={false}/>\r\n        </Pane>\r\n        \r\n        <h2>Selected Seat: {(selected.seat == 0) ? 'None' : selected.seat}</h2>\r\n        <h2>Selected Level: { selected.level }</h2>\r\n        \r\n        {/* Book Button and Dialog */}\r\n        <Component initialState={{ isShown: false }}>\r\n          {({ state, setState }) => (\r\n            <Pane>\r\n              <Dialog\r\n                isShown={state.isShown}\r\n                //title={\"Seat \"+ (seats.find((theSeat) => theSeat.id == selected.seat)).status}\r\n                title={\"Seat Unavailable\"}\r\n                onCloseComplete={() => setState({ isShown: false })}\r\n                //confirmLabel=\"Custom Label\"\r\n                hasFooter={false}\r\n              >\r\n                <ErrorIcon size={30} marginRight={10}/>The seat you have chosen is not available for booking. \r\n              </Dialog>\r\n\r\n              <Button\r\n                appearance=\"primary\"\r\n                iconBefore={HandUpIcon}\r\n                height={40}\r\n                disabled={selected.seat == 0}\r\n                onClick={() => (seats.find((theSeat) => theSeat.id == selected.seat)).status != \"Available\" ? setState({ isShown: true }) : clickBook()}\r\n              >\r\n                Book\r\n              </Button>\r\n            </Pane>\r\n          )}\r\n        </Component>\r\n      </div>\r\n    );\r\n}\r\n\r\nexport default MapSelectorPane;\r\n"]},"metadata":{},"sourceType":"module"}