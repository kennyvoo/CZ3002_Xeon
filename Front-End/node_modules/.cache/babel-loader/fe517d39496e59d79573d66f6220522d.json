{"ast":null,"code":"var _jsxFileName = \"D:\\\\Projects\\\\CZ3002-Lab-SmartLib\\\\CZ3002_Xeon\\\\Front-End\\\\src\\\\components\\\\MyBookingsPage.js\";\nimport React from \"react\";\nimport { Pane, Text, Button, Heading, Table, Menu, Popover, MoreIcon, IconButton, Position } from \"evergreen-ui\";\nimport profiles from './JsonTestFiles/profiles.json';\nimport bookingHistory from './JsonTestFiles/bookingHistory.json';\nimport background from \"./Img/MyBookings.jpg\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction capitalize(string) {\n  return string.charAt(0).toUpperCase() + string.slice(1).toLowerCase();\n}\n\nconst Order = {\n  NONE: 'NONE',\n  ASC: 'ASC',\n  DESC: 'DESC'\n};\nexport default class MyBooking extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.sort = profiles => {\n      const {\n        ordering,\n        orderedColumn\n      } = this.state; // Return if there's no ordering.\n\n      if (ordering === Order.NONE) return profiles; // Get the property to sort each profile on.\n      // By default use the `name` property.\n\n      let propKey = 'name'; // The second column is dynamic.\n\n      if (orderedColumn === 2) propKey = this.state.column2Show; // The third column is fixed to the `ltv` property.\n\n      if (orderedColumn === 3) propKey = 'ltv';\n      return profiles.sort((a, b) => {\n        let aValue = a[propKey];\n        let bValue = b[propKey]; // Parse money as a number.\n\n        const isMoney = aValue.indexOf('$') === 0;\n\n        if (isMoney) {\n          aValue = Number(aValue.slice(1));\n          bValue = Number(bValue.slice(1));\n        } // Support string comparison\n\n\n        const sortTable = {\n          true: 1,\n          false: -1\n        }; // Order ascending (Order.ASC)\n\n        if (this.state.ordering === Order.ASC) {\n          return aValue === bValue ? 0 : sortTable[aValue > bValue];\n        } // Order descending (Order.DESC)\n\n\n        return bValue === aValue ? 0 : sortTable[bValue > aValue];\n      });\n    };\n\n    this.filter = profiles => {\n      const searchQuery = this.state.searchQuery.trim(); // If the searchQuery is empty, return the profiles as is.\n\n      if (searchQuery.length === 0) return profiles;\n      return profiles.filter(profile => {\n        // Use the filter from fuzzaldrin-plus to filter by name.\n        const result = filter([profile.name], searchQuery);\n        return result.length === 1;\n      });\n    };\n\n    this.getIconForOrder = order => {\n      switch (order) {\n        case Order.ASC:\n          return ArrowUpIcon;\n\n        case Order.DESC:\n          return ArrowDownIcon;\n\n        default:\n          return CaretDownIcon;\n      }\n    };\n\n    this.handleFilterChange = value => {\n      this.setState({\n        searchQuery: value\n      });\n    };\n\n    this.renderValueTableHeaderCell = () => {\n      return /*#__PURE__*/_jsxDEV(Table.HeaderCell, {\n        children: /*#__PURE__*/_jsxDEV(Popover, {\n          position: Position.BOTTOM_LEFT,\n          content: ({\n            close\n          }) => /*#__PURE__*/_jsxDEV(Menu, {\n            children: [/*#__PURE__*/_jsxDEV(Menu.OptionsGroup, {\n              title: \"Order\",\n              options: [{\n                label: 'Ascending',\n                value: Order.ASC\n              }, {\n                label: 'Descending',\n                value: Order.DESC\n              }],\n              selected: this.state.orderedColumn === 2 ? this.state.ordering : null,\n              onChange: value => {\n                this.setState({\n                  orderedColumn: 2,\n                  ordering: value\n                }); // Close the popover when you select a value.\n\n                close();\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Menu.Divider, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 121,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Menu.OptionsGroup, {\n              title: \"Show\",\n              options: [{\n                label: 'Email',\n                value: 'email'\n              }, {\n                label: 'Phone',\n                value: 'phone'\n              }, {\n                label: 'Address',\n                value: 'address'\n              }, {\n                label: 'Country',\n                value: 'country'\n              }, {\n                label: 'Company',\n                value: 'company'\n              }, {\n                label: 'Id',\n                value: 'id'\n              }],\n              selected: this.state.column2Show,\n              onChange: value => {\n                this.setState({\n                  column2Show: value\n                }); // Close the popover when you select a value.\n\n                close();\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 13\n          }, this),\n          children: /*#__PURE__*/_jsxDEV(TextDropdownButton, {\n            icon: this.state.orderedColumn === 2 ? this.getIconForOrder(this.state.ordering) : CaretDownIcon,\n            children: capitalize(this.state.column2Show)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 7\n      }, this);\n    };\n\n    this.renderLTVTableHeaderCell = () => {\n      return /*#__PURE__*/_jsxDEV(Table.TextHeaderCell, {\n        children: /*#__PURE__*/_jsxDEV(Popover, {\n          position: Position.BOTTOM_LEFT,\n          content: ({\n            close\n          }) => /*#__PURE__*/_jsxDEV(Menu, {\n            children: /*#__PURE__*/_jsxDEV(Menu.OptionsGroup, {\n              title: \"Order\",\n              options: [{\n                label: 'Ascending',\n                value: Order.ASC\n              }, {\n                label: 'Descending',\n                value: Order.DESC\n              }],\n              selected: this.state.orderedColumn === 3 ? this.state.ordering : null,\n              onChange: value => {\n                this.setState({\n                  orderedColumn: 3,\n                  ordering: value\n                }); // Close the popover when you select a value.\n\n                close();\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 166,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 13\n          }, this),\n          children: /*#__PURE__*/_jsxDEV(TextDropdownButton, {\n            icon: this.state.orderedColumn === 3 ? this.getIconForOrder(this.state.ordering) : CaretDownIcon,\n            children: \"LTV\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 7\n      }, this);\n    };\n\n    this.renderRowMenu = () => {\n      return /*#__PURE__*/_jsxDEV(Menu, {\n        children: [/*#__PURE__*/_jsxDEV(Menu.Group, {\n          children: [/*#__PURE__*/_jsxDEV(Menu.Item, {\n            children: \"Share...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Menu.Item, {\n            children: \"Move...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 206,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Menu.Item, {\n            secondaryText: \"\\u2318R\",\n            children: \"Rename...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Menu.Divider, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Menu.Group, {\n          children: /*#__PURE__*/_jsxDEV(Menu.Item, {\n            intent: \"danger\",\n            children: \"Delete...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 7\n      }, this);\n    };\n\n    this.renderRow = ({\n      profile\n    }) => {\n      return /*#__PURE__*/_jsxDEV(Table.Row, {\n        children: [/*#__PURE__*/_jsxDEV(Table.Cell, {\n          display: \"flex\",\n          alignItems: \"center\",\n          children: [/*#__PURE__*/_jsxDEV(Avatar, {\n            name: profile.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 221,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Text, {\n            marginLeft: 8,\n            size: 300,\n            fontWeight: 500,\n            children: profile.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 222,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Table.TextCell, {\n          children: profile[this.state.column2Show]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Table.TextCell, {\n          isNumber: true,\n          children: profile.ltv\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Table.Cell, {\n          width: 48,\n          flex: \"none\",\n          children: /*#__PURE__*/_jsxDEV(Popover, {\n            content: this.renderRowMenu,\n            position: Position.BOTTOM_RIGHT,\n            children: /*#__PURE__*/_jsxDEV(IconButton, {\n              icon: MoreIcon,\n              height: 24,\n              appearance: \"minimal\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 233,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 229,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 9\n        }, this)]\n      }, profile.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 7\n      }, this);\n    };\n\n    this.state = {\n      searchQuery: '',\n      orderedColumn: 1,\n      ordering: Order.NONE,\n      column2Show: 'email'\n    };\n  }\n\n  render() {\n    const items = this.filter(this.sort(profiles));\n    return /*#__PURE__*/_jsxDEV(Table, {\n      border: true,\n      children: [/*#__PURE__*/_jsxDEV(Table.Head, {\n        children: [/*#__PURE__*/_jsxDEV(Table.SearchHeaderCell, {\n          onChange: this.handleFilterChange,\n          value: this.state.searchQuery\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 11\n        }, this), this.renderValueTableHeaderCell(), this.renderLTVTableHeaderCell(), /*#__PURE__*/_jsxDEV(Table.HeaderCell, {\n          width: 48,\n          flex: \"none\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 251,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Table.VirtualBody, {\n        height: 640,\n        children: items.map(item => this.renderRow({\n          profile: item\n        }))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["D:/Projects/CZ3002-Lab-SmartLib/CZ3002_Xeon/Front-End/src/components/MyBookingsPage.js"],"names":["React","Pane","Text","Button","Heading","Table","Menu","Popover","MoreIcon","IconButton","Position","profiles","bookingHistory","background","capitalize","string","charAt","toUpperCase","slice","toLowerCase","Order","NONE","ASC","DESC","MyBooking","Component","constructor","props","sort","ordering","orderedColumn","state","propKey","column2Show","a","b","aValue","bValue","isMoney","indexOf","Number","sortTable","true","false","filter","searchQuery","trim","length","profile","result","name","getIconForOrder","order","ArrowUpIcon","ArrowDownIcon","CaretDownIcon","handleFilterChange","value","setState","renderValueTableHeaderCell","BOTTOM_LEFT","close","label","renderLTVTableHeaderCell","renderRowMenu","renderRow","ltv","BOTTOM_RIGHT","id","render","items","map","item"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { Pane, Text, Button, Heading, Table, Menu, Popover, MoreIcon, IconButton, Position } from \"evergreen-ui\";\r\nimport profiles from './JsonTestFiles/profiles.json'\r\nimport bookingHistory from './JsonTestFiles/bookingHistory.json'\r\nimport background from \"./Img/MyBookings.jpg\";\r\nfunction capitalize(string) {\r\n  return string.charAt(0).toUpperCase() + string.slice(1).toLowerCase()\r\n}\r\n\r\nconst Order = {\r\n  NONE: 'NONE',\r\n  ASC: 'ASC',\r\n  DESC: 'DESC'\r\n}\r\n\r\nexport default class MyBooking extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n\r\n    this.state = {\r\n      searchQuery: '',\r\n      orderedColumn: 1,\r\n      ordering: Order.NONE,\r\n      column2Show: 'email'\r\n    }\r\n  }\r\n\r\n  sort = profiles => {\r\n    const { ordering, orderedColumn } = this.state\r\n    // Return if there's no ordering.\r\n    if (ordering === Order.NONE) return profiles\r\n\r\n    // Get the property to sort each profile on.\r\n    // By default use the `name` property.\r\n    let propKey = 'name'\r\n    // The second column is dynamic.\r\n    if (orderedColumn === 2) propKey = this.state.column2Show\r\n    // The third column is fixed to the `ltv` property.\r\n    if (orderedColumn === 3) propKey = 'ltv'\r\n\r\n    return profiles.sort((a, b) => {\r\n      let aValue = a[propKey]\r\n      let bValue = b[propKey]\r\n\r\n      // Parse money as a number.\r\n      const isMoney = aValue.indexOf('$') === 0\r\n\r\n      if (isMoney) {\r\n        aValue = Number(aValue.slice(1))\r\n        bValue = Number(bValue.slice(1))\r\n      }\r\n\r\n      // Support string comparison\r\n      const sortTable = { true: 1, false: -1 }\r\n\r\n      // Order ascending (Order.ASC)\r\n      if (this.state.ordering === Order.ASC) {\r\n        return aValue === bValue ? 0 : sortTable[aValue > bValue]\r\n      }\r\n\r\n      // Order descending (Order.DESC)\r\n      return bValue === aValue ? 0 : sortTable[bValue > aValue]\r\n    })\r\n  }\r\n\r\n  // Filter the profiles based on the name property.\r\n  filter = profiles => {\r\n    const searchQuery = this.state.searchQuery.trim()\r\n\r\n    // If the searchQuery is empty, return the profiles as is.\r\n    if (searchQuery.length === 0) return profiles\r\n\r\n    return profiles.filter(profile => {\r\n      // Use the filter from fuzzaldrin-plus to filter by name.\r\n      const result = filter([profile.name], searchQuery)\r\n      return result.length === 1\r\n    })\r\n  }\r\n\r\n  getIconForOrder = order => {\r\n    switch (order) {\r\n      case Order.ASC:\r\n        return ArrowUpIcon\r\n      case Order.DESC:\r\n        return ArrowDownIcon\r\n      default:\r\n        return CaretDownIcon\r\n    }\r\n  }\r\n\r\n  handleFilterChange = value => {\r\n    this.setState({ searchQuery: value })\r\n  }\r\n\r\n  renderValueTableHeaderCell = () => {\r\n    return (\r\n      <Table.HeaderCell>\r\n        <Popover\r\n          position={Position.BOTTOM_LEFT}\r\n          content={({ close }) => (\r\n            <Menu>\r\n              <Menu.OptionsGroup\r\n                title=\"Order\"\r\n                options={[\r\n                  { label: 'Ascending', value: Order.ASC },\r\n                  { label: 'Descending', value: Order.DESC }\r\n                ]}\r\n                selected={\r\n                  this.state.orderedColumn === 2 ? this.state.ordering : null\r\n                }\r\n                onChange={value => {\r\n                  this.setState({\r\n                    orderedColumn: 2,\r\n                    ordering: value\r\n                  })\r\n                  // Close the popover when you select a value.\r\n                  close()\r\n                }}\r\n              />\r\n\r\n              <Menu.Divider />\r\n\r\n              <Menu.OptionsGroup\r\n                title=\"Show\"\r\n                options={[\r\n                  { label: 'Email', value: 'email' },\r\n                  { label: 'Phone', value: 'phone' },\r\n                  { label: 'Address', value: 'address' },\r\n                  { label: 'Country', value: 'country' },\r\n                  { label: 'Company', value: 'company' },\r\n                  { label: 'Id', value: 'id' }\r\n                ]}\r\n                selected={this.state.column2Show}\r\n                onChange={value => {\r\n                  this.setState({\r\n                    column2Show: value\r\n                  })\r\n                  // Close the popover when you select a value.\r\n                  close()\r\n                }}\r\n              />\r\n            </Menu>\r\n          )}\r\n        >\r\n          <TextDropdownButton\r\n            icon={\r\n              this.state.orderedColumn === 2\r\n                ? this.getIconForOrder(this.state.ordering)\r\n                : CaretDownIcon\r\n            }\r\n          >\r\n            {capitalize(this.state.column2Show)}\r\n          </TextDropdownButton>\r\n        </Popover>\r\n      </Table.HeaderCell>\r\n    )\r\n  }\r\n\r\n  renderLTVTableHeaderCell = () => {\r\n    return (\r\n      <Table.TextHeaderCell>\r\n        <Popover\r\n          position={Position.BOTTOM_LEFT}\r\n          content={({ close }) => (\r\n            <Menu>\r\n              <Menu.OptionsGroup\r\n                title=\"Order\"\r\n                options={[\r\n                  { label: 'Ascending', value: Order.ASC },\r\n                  { label: 'Descending', value: Order.DESC }\r\n                ]}\r\n                selected={\r\n                  this.state.orderedColumn === 3 ? this.state.ordering : null\r\n                }\r\n                onChange={value => {\r\n                  this.setState({\r\n                    orderedColumn: 3,\r\n                    ordering: value\r\n                  })\r\n                  // Close the popover when you select a value.\r\n                  close()\r\n                }}\r\n              />\r\n            </Menu>\r\n          )}\r\n        >\r\n          <TextDropdownButton\r\n            icon={\r\n              this.state.orderedColumn === 3\r\n                ? this.getIconForOrder(this.state.ordering)\r\n                : CaretDownIcon\r\n            }\r\n          >\r\n            LTV\r\n          </TextDropdownButton>\r\n        </Popover>\r\n      </Table.TextHeaderCell>\r\n    )\r\n  }\r\n\r\n  renderRowMenu = () => {\r\n    return (\r\n      <Menu>\r\n        <Menu.Group>\r\n          <Menu.Item>Share...</Menu.Item>\r\n          <Menu.Item>Move...</Menu.Item>\r\n          <Menu.Item secondaryText=\"⌘R\">Rename...</Menu.Item>\r\n        </Menu.Group>\r\n        <Menu.Divider />\r\n        <Menu.Group>\r\n          <Menu.Item intent=\"danger\">Delete...</Menu.Item>\r\n        </Menu.Group>\r\n      </Menu>\r\n    )\r\n  }\r\n\r\n  renderRow = ({ profile }) => {\r\n    return (\r\n      <Table.Row key={profile.id}>\r\n        <Table.Cell display=\"flex\" alignItems=\"center\">\r\n          <Avatar name={profile.name} />\r\n          <Text marginLeft={8} size={300} fontWeight={500}>\r\n            {profile.name}\r\n          </Text>\r\n        </Table.Cell>\r\n        <Table.TextCell>{profile[this.state.column2Show]}</Table.TextCell>\r\n        <Table.TextCell isNumber>{profile.ltv}</Table.TextCell>\r\n        <Table.Cell width={48} flex=\"none\">\r\n          <Popover\r\n            content={this.renderRowMenu}\r\n            position={Position.BOTTOM_RIGHT}\r\n          >\r\n            <IconButton icon={MoreIcon} height={24} appearance=\"minimal\" />\r\n          </Popover>\r\n        </Table.Cell>\r\n      </Table.Row>\r\n    )\r\n  }\r\n\r\n  render() {\r\n    const items = this.filter(this.sort(profiles))\r\n    return (\r\n      <Table border>\r\n        <Table.Head>\r\n          <Table.SearchHeaderCell\r\n            onChange={this.handleFilterChange}\r\n            value={this.state.searchQuery}\r\n          />\r\n          {this.renderValueTableHeaderCell()}\r\n          {this.renderLTVTableHeaderCell()}\r\n          <Table.HeaderCell width={48} flex=\"none\" />\r\n        </Table.Head>\r\n        <Table.VirtualBody height={640}>\r\n          {items.map(item => this.renderRow({ profile: item }))}\r\n        </Table.VirtualBody>\r\n      </Table>\r\n    )\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}