{"ast":null,"code":"var _jsxFileName = \"D:\\\\Projects\\\\CZ3002-Lab-SmartLib\\\\CZ3002_Xeon\\\\Front-End\\\\src\\\\components\\\\ForgetPasswordPage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useRef } from \"react\";\nimport { Pane, Text, Button, Heading, Paragraph, TextInputField, FormField } from \"evergreen-ui\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport background from \"./Img/Stress.png\";\nimport { useAuth } from '../context/AuthContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ForgetPasswordPage() {\n  _s();\n\n  const emailRef = useRef();\n  const passwordRef = useRef();\n  const passwordConfirmRef = useRef();\n  const {\n    signup\n  } = useAuth();\n  const [error, setError] = useState('');\n  const [loading, setLoading] = useState(false);\n  const history = useHistory();\n\n  async function handleSubmit(e) {\n    e.preventDefault(); //Prevent from refreshing\n\n    if (passwordRef.current.value !== passwordConfirmRef.current.value) {\n      console.log(\"Details do not match\");\n      return setError('Passwords do not match'); // We want to immediately get out of the Fn without going to the signup Fn\n    }\n\n    try {\n      setError('');\n      setLoading(true); //Prevent them from creating multiple acc at the same time when keep clicking submit button\n\n      await signup(emailRef.current.value, passwordRef.current.value);\n      history.push(\"/\");\n      console.log(\"Sign in\");\n    } catch {\n      setError('Failed to create an account');\n    }\n\n    setLoading(false); //Aft sign up \n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Pane, {\n      backgroundImage: `url(${background})`,\n      display: \"flex\",\n      alignItems: \"center\",\n      justifyContent: \"center\",\n      padding: 100,\n      flexDirection: \"column\",\n      children: [/*#__PURE__*/_jsxDEV(Heading, {\n        fontSize: 100,\n        color: 'white',\n        children: \"Forget Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Text, {\n        size: 600,\n        color: 'white',\n        children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 44\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 53\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 62\n        }, this), \"Don't Worry, we'll get you back on track!\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Pane, {\n      height: 1000,\n      backgroundColor: \"beige\",\n      display: \"flex\",\n      justifyContent: \"center\",\n      padding: 20,\n      children: /*#__PURE__*/_jsxDEV(FormField, {\n        children: [/*#__PURE__*/_jsxDEV(Heading, {\n          size: 800,\n          children: \"Password Reset\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Text, {\n          children: /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(TextInputField, {\n          id: \"Login Information\",\n          required: true,\n          label: \"School Email\",\n          placeholder: \"username@e.ntu.edu.sg\",\n          inputHeight: 45,\n          inputWidth: 450\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Pane, {\n          display: \"flex\",\n          borderRadius: 3,\n          children: /*#__PURE__*/_jsxDEV(Pane, {\n            marginLeft: 280,\n            paddingBottom: 20,\n            children: /*#__PURE__*/_jsxDEV(Link, {\n              to: \"/ResetPassword\",\n              style: {\n                textDecoration: \"none\"\n              },\n              children: [\" \", /*#__PURE__*/_jsxDEV(Button, {\n                appearance: \"primary\",\n                height: 48,\n                children: \"Send Reset Email\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 59,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ForgetPasswordPage, \"Gtk3nZ4HDG+cInsbkw2EvcCkjL8=\", false, function () {\n  return [useAuth, useHistory];\n});\n\n_c = ForgetPasswordPage;\nexport default ForgetPasswordPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"ForgetPasswordPage\");","map":{"version":3,"sources":["D:/Projects/CZ3002-Lab-SmartLib/CZ3002_Xeon/Front-End/src/components/ForgetPasswordPage.js"],"names":["React","useState","useRef","Pane","Text","Button","Heading","Paragraph","TextInputField","FormField","Link","useHistory","background","useAuth","ForgetPasswordPage","emailRef","passwordRef","passwordConfirmRef","signup","error","setError","loading","setLoading","history","handleSubmit","e","preventDefault","current","value","console","log","push","textDecoration"],"mappings":"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","sourcesContent":["import React, { useState, useRef } from \"react\"\r\nimport { Pane, Text, Button, Heading, Paragraph, TextInputField, FormField } from \"evergreen-ui\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport background from \"./Img/Stress.png\";\r\nimport { useAuth } from '../context/AuthContext'\r\n\r\nfunction ForgetPasswordPage() {\r\n\r\n  const emailRef = useRef()\r\n  const passwordRef = useRef()\r\n  const passwordConfirmRef = useRef()\r\n  const {signup} = useAuth()\r\n  const [error, setError] = useState('')\r\n  const [loading, setLoading] = useState(false)\r\n  const history = useHistory()\r\n\r\n  async function handleSubmit(e) {\r\n    e.preventDefault()  //Prevent from refreshing\r\n\r\n    if (passwordRef.current.value !== passwordConfirmRef.current.value) {\r\n      console.log(\"Details do not match\");\r\n      return setError('Passwords do not match') // We want to immediately get out of the Fn without going to the signup Fn\r\n    }\r\n\r\n    try {\r\n      setError('')\r\n      setLoading(true) //Prevent them from creating multiple acc at the same time when keep clicking submit button\r\n      await signup(emailRef.current.value, passwordRef.current.value)\r\n      history.push(\"/\")\r\n      console.log(\"Sign in\");\r\n    } catch {\r\n      setError('Failed to create an account')\r\n    }\r\n    setLoading(false) //Aft sign up \r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Pane backgroundImage = {`url(${background})`} display=\"flex\" alignItems=\"center\" justifyContent=\"center\" padding={100} flexDirection=\"column\">\r\n        <Heading fontSize={100} color = {'white'}>Forget Password</Heading>\r\n        <Text size={600} color = {'white'}><br></br><br></br><br></br>Don't Worry, we'll get you back on track!</Text>\r\n      </Pane>\r\n      <Pane height={1000} backgroundColor=\"beige\" display=\"flex\" justifyContent=\"center\" padding={20}>\r\n        <FormField>\r\n        <Heading size={800} >Password Reset</Heading>\r\n        <Text><br></br></Text>\r\n        <TextInputField\r\n          id=\"Login Information\"\r\n          required\r\n          label=\"School Email\"\r\n          placeholder=\"username@e.ntu.edu.sg\"\r\n          inputHeight = {45}\r\n          inputWidth = {450}\r\n        />\r\n        {/* This is the container/pane for the login section */}\r\n        <Pane display=\"flex\" borderRadius={3}>\r\n          <Pane marginLeft={280} paddingBottom={20}>\r\n            <Link to=\"/ResetPassword\" style={{ textDecoration: \"none\" }}> {/* textDecoration has to set to none or else the button will have a line below the Login text */}\r\n                <Button appearance=\"primary\" height={48}>Send Reset Email</Button>\r\n            </Link>\r\n          </Pane>\r\n        </Pane>\r\n        </FormField>\r\n      </Pane>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ForgetPasswordPage;\r\n"]},"metadata":{},"sourceType":"module"}