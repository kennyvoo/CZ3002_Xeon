[{"D:\\Projects\\CZ3002-Lab-SmartLib\\CZ3002_Xeon\\Front-End\\src\\index.js":"1","D:\\Projects\\CZ3002-Lab-SmartLib\\CZ3002_Xeon\\Front-End\\src\\App.js":"2","D:\\Projects\\CZ3002-Lab-SmartLib\\CZ3002_Xeon\\Front-End\\src\\reportWebVitals.js":"3","D:\\Projects\\CZ3002-Lab-SmartLib\\CZ3002_Xeon\\Front-End\\src\\components\\AccountMgmtPage.js":"4","D:\\Projects\\CZ3002-Lab-SmartLib\\CZ3002_Xeon\\Front-End\\src\\components\\HomePage.js":"5","D:\\Projects\\CZ3002-Lab-SmartLib\\CZ3002_Xeon\\Front-End\\src\\components\\ForgetPasswordPage.js":"6","D:\\Projects\\CZ3002-Lab-SmartLib\\CZ3002_Xeon\\Front-End\\src\\components\\Navbar.js":"7","D:\\Projects\\CZ3002-Lab-SmartLib\\CZ3002_Xeon\\Front-End\\src\\components\\MyBookingsPage.js":"8","D:\\Projects\\CZ3002-Lab-SmartLib\\CZ3002_Xeon\\Front-End\\src\\components\\Footer.js":"9","D:\\Projects\\CZ3002-Lab-SmartLib\\CZ3002_Xeon\\Front-End\\src\\components\\CreateAccountPage.js":"10","D:\\Projects\\CZ3002-Lab-SmartLib\\CZ3002_Xeon\\Front-End\\src\\components\\SeatInformationPage.js":"11","D:\\Projects\\CZ3002-Lab-SmartLib\\CZ3002_Xeon\\Front-End\\src\\components\\LoginPage.js":"12","D:\\Projects\\CZ3002-Lab-SmartLib\\CZ3002_Xeon\\Front-End\\src\\contexts\\SeatContext.js":"13","D:\\Projects\\CZ3002-Lab-SmartLib\\CZ3002_Xeon\\Front-End\\src\\contexts\\SelectSeatContext.js":"14","D:\\Projects\\CZ3002-Lab-SmartLib\\CZ3002_Xeon\\Front-End\\src\\components\\MapSelectorPane.js":"15","D:\\Projects\\CZ3002-Lab-SmartLib\\CZ3002_Xeon\\Front-End\\src\\services\\firebase.js":"16","D:\\Projects\\CZ3002-Lab-SmartLib\\CZ3002_Xeon\\Front-End\\src\\components\\AdminHomePage.js":"17","D:\\Projects\\CZ3002-Lab-SmartLib\\CZ3002_Xeon\\Front-End\\src\\components\\ModifySeatsPage.js":"18","D:\\Projects\\CZ3002-Lab-SmartLib\\CZ3002_Xeon\\Front-End\\src\\components\\AddSeatsPage.js":"19","D:\\Projects\\CZ3002-Lab-SmartLib\\CZ3002_Xeon\\Front-End\\src\\components\\seatmap\\SeatsList.js":"20","D:\\Projects\\CZ3002-Lab-SmartLib\\CZ3002_Xeon\\Front-End\\src\\components\\seatmap\\ImagePlane.js":"21","D:\\Projects\\CZ3002-Lab-SmartLib\\CZ3002_Xeon\\Front-End\\src\\components\\seatmap\\CamSeatsList.js":"22","D:\\Projects\\CZ3002-Lab-SmartLib\\CZ3002_Xeon\\Front-End\\src\\components\\Stats.js":"23","D:\\Projects\\CZ3002-Lab-SmartLib\\CZ3002_Xeon\\Front-End\\src\\components\\DrawRect.js":"24","D:\\Projects\\CZ3002-Lab-SmartLib\\CZ3002_Xeon\\Front-End\\src\\components\\seatmap\\Seat.js":"25","D:\\Projects\\CZ3002-Lab-SmartLib\\CZ3002_Xeon\\Front-End\\src\\components\\seatmap\\GridLines.js":"26","D:\\Projects\\CZ3002-Lab-SmartLib\\CZ3002_Xeon\\Front-End\\src\\components\\seatmap\\CamSeat.js":"27","D:\\Projects\\CZ3002-Lab-SmartLib\\CZ3002_Xeon\\Front-End\\src\\PrivateRoute2.js":"28","D:\\Projects\\CZ3002-Lab-SmartLib\\CZ3002_Xeon\\Front-End\\src\\PrivateRoute.js":"29","D:\\Projects\\CZ3002-Lab-SmartLib\\CZ3002_Xeon\\Front-End\\src\\context\\AuthContext.js":"30","D:\\Projects\\CZ3002-Lab-SmartLib\\CZ3002_Xeon\\Front-End\\src\\firebase.js":"31","D:\\Projects\\CZ3002-Lab-SmartLib\\CZ3002_Xeon\\Front-End\\src\\components\\AdminPage.js":"32"},{"size":742,"mtime":1616055205907,"results":"33","hashOfConfig":"34"},{"size":2550,"mtime":1616057455495,"results":"35","hashOfConfig":"34"},{"size":375,"mtime":1613976189405,"results":"36","hashOfConfig":"34"},{"size":2009,"mtime":1616055312225,"results":"37","hashOfConfig":"34"},{"size":1186,"mtime":1616062912956,"results":"38","hashOfConfig":"34"},{"size":2784,"mtime":1616055739628,"results":"39","hashOfConfig":"34"},{"size":4602,"mtime":1616062041922,"results":"40","hashOfConfig":"34"},{"size":4373,"mtime":1614670152973,"results":"41","hashOfConfig":"34"},{"size":596,"mtime":1613976189400,"results":"42","hashOfConfig":"34"},{"size":4235,"mtime":1616055312226,"results":"43","hashOfConfig":"34"},{"size":2645,"mtime":1614671829927,"results":"44","hashOfConfig":"34"},{"size":3891,"mtime":1616064455264,"results":"45","hashOfConfig":"34"},{"size":12316,"mtime":1616055205906,"results":"46","hashOfConfig":"34"},{"size":421,"mtime":1616055205906,"results":"47","hashOfConfig":"34"},{"size":4307,"mtime":1616055205897,"results":"48","hashOfConfig":"34"},{"size":0,"mtime":1616056929088,"results":"49","hashOfConfig":"34"},{"size":5689,"mtime":1616055205879,"results":"50","hashOfConfig":"34"},{"size":12273,"mtime":1616055205897,"results":"51","hashOfConfig":"34"},{"size":11825,"mtime":1616055205878,"results":"52","hashOfConfig":"34"},{"size":934,"mtime":1616055205905,"results":"53","hashOfConfig":"34"},{"size":1047,"mtime":1616055205904,"results":"54","hashOfConfig":"34"},{"size":926,"mtime":1616055205902,"results":"55","hashOfConfig":"34"},{"size":2633,"mtime":1616055205899,"results":"56","hashOfConfig":"34"},{"size":3962,"mtime":1616055205881,"results":"57","hashOfConfig":"34"},{"size":2281,"mtime":1616055205904,"results":"58","hashOfConfig":"34"},{"size":3868,"mtime":1616055205903,"results":"59","hashOfConfig":"34"},{"size":1756,"mtime":1616055205902,"results":"60","hashOfConfig":"34"},{"size":635,"mtime":1616055312224,"results":"61","hashOfConfig":"34"},{"size":555,"mtime":1616055312224,"results":"62","hashOfConfig":"34"},{"size":1496,"mtime":1616055312228,"results":"63","hashOfConfig":"34"},{"size":435,"mtime":1616055312229,"results":"64","hashOfConfig":"34"},{"size":1465,"mtime":1616055698977,"results":"65","hashOfConfig":"34"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"988qhs",{"filePath":"68","messages":"69","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"72"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"78","messages":"79","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"72"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"83","messages":"84","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"72"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"72"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"72"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"72"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"101","messages":"102","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"72"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"72"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"72"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"72"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"72"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"72"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"72"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"72"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"72"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"72"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135","usedDeprecatedRules":"72"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138","usedDeprecatedRules":"72"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"147","messages":"148","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149","usedDeprecatedRules":"72"},"D:\\Projects\\CZ3002-Lab-SmartLib\\CZ3002_Xeon\\Front-End\\src\\index.js",[],"D:\\Projects\\CZ3002-Lab-SmartLib\\CZ3002_Xeon\\Front-End\\src\\App.js",["150","151","152","153","154","155","156","157"],"D:\\Projects\\CZ3002-Lab-SmartLib\\CZ3002_Xeon\\Front-End\\src\\reportWebVitals.js",[],["158","159"],"D:\\Projects\\CZ3002-Lab-SmartLib\\CZ3002_Xeon\\Front-End\\src\\components\\AccountMgmtPage.js",["160","161","162","163","164","165","166","167","168"],"import React, {useState} from \"react\";\r\nimport { Pane, \r\n  Text,\r\n  Button, \r\n  Heading, \r\n  Paragraph, \r\n  TextInputField, \r\n  FormField, \r\n  Avatar, \r\n  BackButton, \r\n  CrossIcon, \r\n  InfoSignIcon, \r\n  EditIcon, \r\n  WarningSignIcon \r\n} from \"evergreen-ui\";\r\nimport { Link } from \"react-router-dom\"\r\n\r\nimport {useAuth} from '../context/AuthContext'\r\n\r\nfunction AccountMgmtPage() {\r\n\r\n  const { currentUser } = useAuth()\r\n\r\n  return (\r\n    <div>\r\n      {/* Seat description including avatar*/}\r\n      <Pane display=\"flex\" padding={16} borderRadius={3} marginTop={20}> {/* Parent class, defiines the row*/}\r\n        <Pane padding={16} alignItems=\"center\" marginLeft={60} > {/* Children class, defiines the column*/}\r\n          <Avatar isSolid name=\"A V\" size={300} />\r\n        </Pane>\r\n        <Pane flex={1} display=\"flex\" marginLeft={30} padding={16}>\r\n          <Pane padding={16}>\r\n            <Pane flex={1} display=\"flex\">\r\n              <Heading size={800} >{currentUser.name}</Heading> {/* Currently not stored yet */}\r\n            </Pane>\r\n            <Pane>\r\n              <Heading size={800} >{currentUser.email}</Heading>\r\n            </Pane>\r\n            <Pane marginTop={16}>\r\n              <Text size={600}>- Favourite Seat: 545\r\n              </Text>\r\n            </Pane>\r\n\r\n            {/* Booking Button*/}\r\n            <Pane display=\"flex\" marginTop={100}>\r\n              <Pane flex={1} alignItems=\"center\" display=\"flex\">\r\n              </Pane>\r\n              <Pane>\r\n                {/* Below you can see the marginRight property on a Button. */}\r\n                <Link to=\"/ForgetPassword\" style={{ textDecoration: \"none\" }}> {/* textDecoration has to set to none or else the button will have a line below the Login text */}\r\n                  <Button appearance=\"primary\" height={48}>Reset Password</Button>\r\n                </Link>\r\n              </Pane>\r\n            </Pane>\r\n\r\n          </Pane>\r\n        </Pane>\r\n      </Pane>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AccountMgmtPage;\r\n","D:\\Projects\\CZ3002-Lab-SmartLib\\CZ3002_Xeon\\Front-End\\src\\components\\HomePage.js",["169","170","171","172","173","174"],"D:\\Projects\\CZ3002-Lab-SmartLib\\CZ3002_Xeon\\Front-End\\src\\components\\ForgetPasswordPage.js",["175","176","177","178","179","180"],"import React, { useState, useRef } from \"react\"\r\nimport { Pane, Text, Button, Heading, Paragraph, TextInputField, FormField, Alert } from \"evergreen-ui\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport background from \"./Img/Stress.png\";\r\nimport { useAuth } from '../context/AuthContext'\r\n\r\nfunction ForgetPasswordPage() {\r\n\r\n  const emailRef = useRef()\r\n  const { resetPassword } = useAuth()\r\n  const [error, setError] = useState('')\r\n  const [message, setMessage] = useState('')\r\n  const [loading, setLoading] = useState(false)\r\n  const history = useHistory()\r\n\r\n  async function handleSubmit(e) {\r\n    e.preventDefault()  //Prevent from refreshing\r\n\r\n    try {\r\n      setMessage('')\r\n      setError('')\r\n      setLoading(true) //Prevent them from creating multiple acc at the same time when keep clicking submit button\r\n      await resetPassword(emailRef.current.value)\r\n      setMessage('Check your inbox for further instructions')\r\n    } catch {\r\n      setMessage('')\r\n      setError('Email entered is not a registered user!')\r\n    }\r\n    setLoading(false) //Aft sign up \r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Pane backgroundImage={`url(${background})`} display=\"flex\" alignItems=\"center\" justifyContent=\"center\" padding={100} flexDirection=\"column\">\r\n        <Heading fontSize={100} color={'white'}>Forget Password</Heading>\r\n        <Text size={600} color={'white'}><br></br><br></br><br></br>Don't Worry, we'll get you back on track!</Text>\r\n      </Pane>\r\n      <Pane height={1000} backgroundColor=\"beige\" display=\"flex\" justifyContent=\"center\" padding={20}>\r\n        <form onSubmit={handleSubmit}>\r\n          <Heading size={800} >Password Reset</Heading>\r\n          <Text><br></br></Text>\r\n\r\n          {(error != '') ? (<Pane>\r\n            <Alert\r\n              intent=\"danger\"\r\n              title={error}\r\n            />\r\n          </Pane>) : (<Pane></Pane>)}\r\n\r\n          {(message != '') ? (<Pane>\r\n            <Alert\r\n              intent=\"success\"\r\n              title={message}\r\n            />\r\n          </Pane>) : (<Pane></Pane>)} \r\n\r\n          <TextInputField\r\n            id=\"Login Information\"\r\n            required\r\n            label=\"School Email\"\r\n            placeholder=\"username@e.ntu.edu.sg\"\r\n            inputHeight={45}\r\n            inputWidth={450}\r\n            type=\"email\"\r\n            ref={emailRef}\r\n          />\r\n          {/* This is the container/pane for the login section */}\r\n          <Pane display=\"flex\" borderRadius={3}>\r\n            <Pane marginLeft={280} paddingBottom={20}>\r\n              <Button appearance=\"primary\" height={48} disabled={loading} type=\"submit\">Send Reset Email</Button>\r\n            </Pane>\r\n          </Pane>\r\n        </form>\r\n      </Pane>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ForgetPasswordPage;\r\n","D:\\Projects\\CZ3002-Lab-SmartLib\\CZ3002_Xeon\\Front-End\\src\\components\\Navbar.js",["181","182","183","184","185","186","187","188","189","190","191","192","193"],"D:\\Projects\\CZ3002-Lab-SmartLib\\CZ3002_Xeon\\Front-End\\src\\components\\MyBookingsPage.js",["194","195"],"import React from \"react\";\r\nimport { Pane, Text, Button, Heading, Table, Menu, Popover, MoreIcon, IconButton, Position } from \"evergreen-ui\";\r\nimport currentBooking from './JsonTestFiles/currentBooking.json'\r\nimport bookingHistory from './JsonTestFiles/bookingHistory.json'\r\nimport background from \"./Img/MyBookings.jpg\";\r\n\r\nexport default class MyBookingsPage extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n  }\r\n\r\n  /* Options Menu For Current Booking Table */\r\n  renderRowMenu = () => {\r\n    return (\r\n      <Menu>\r\n        <Menu.Group>\r\n          <Menu.Item>Share...</Menu.Item>\r\n        </Menu.Group>\r\n        <Menu.Divider />\r\n        <Menu.Group>\r\n          <Menu.Item intent=\"danger\">Delete...</Menu.Item>\r\n        </Menu.Group>\r\n      </Menu>\r\n    )\r\n  }\r\n\r\n  /* Table Render for both tables */\r\n  render() {\r\n\r\n    return (\r\n      <div>\r\n        <Pane backgroundImage={`url(${background})`} display=\"flex\" alignItems=\"center\" justifyContent=\"center\" padding={100} flexDirection=\"column\">\r\n          <Heading fontSize={100} color={'white'}>My Bookings</Heading>\r\n          <Text size={600} color={'white'}><br></br><br></br><br></br>View your past seat bookings</Text>\r\n        </Pane>\r\n\r\n        {/* Current Booking Table */}\r\n        <Pane backgroundColor=\"beige\" justifyContent=\"center\" padding={16}>\r\n          <Heading size={600} marginBottom={16}>Current Booking</Heading>\r\n          <Table>\r\n            <Table.Head>\r\n              <Table.TextHeaderCell>\r\n                Booking ID\r\n            </Table.TextHeaderCell>\r\n              <Table.TextHeaderCell>\r\n                Date & Time\r\n            </Table.TextHeaderCell>\r\n              <Table.TextHeaderCell>\r\n                Seat ID\r\n            </Table.TextHeaderCell>\r\n              <Table.TextHeaderCell>\r\n                Ratings\r\n            </Table.TextHeaderCell>\r\n            </Table.Head>\r\n            <Table.VirtualBody height={50}>\r\n              {currentBooking.map(profile => (\r\n                <Table.Row key={profile.id}>\r\n                  <Table.TextCell>{profile.identification}</Table.TextCell>\r\n                  <Table.TextCell>{profile.timeBooked}</Table.TextCell>\r\n                  <Table.TextCell isNumber>\r\n                    {profile.seatID}\r\n                  </Table.TextCell>\r\n                  <Table.TextCell isNumber>\r\n                    {profile.ratings}\r\n                  </Table.TextCell>\r\n                  <Table.Cell width={48} flex=\"none\">\r\n                    <Popover\r\n                      content={this.renderRowMenu}\r\n                      position={Position.BOTTOM_RIGHT}\r\n                    >\r\n                      <IconButton icon={MoreIcon} height={24} appearance=\"minimal\" />\r\n                    </Popover>\r\n                  </Table.Cell>\r\n                </Table.Row>\r\n              ))}\r\n            </Table.VirtualBody>\r\n          </Table>\r\n        </Pane>\r\n\r\n        {/* Booking History Table */}\r\n        <Pane backgroundColor=\"beige\" justifyContent=\"center\" padding={20}>\r\n          <Heading size={600} marginBottom={16}>Booking History</Heading>\r\n          <Table>\r\n            <Table.Head>\r\n              <Table.TextHeaderCell>\r\n                Booking ID\r\n            </Table.TextHeaderCell>\r\n              <Table.TextHeaderCell>\r\n                Date & Time\r\n            </Table.TextHeaderCell>\r\n              <Table.TextHeaderCell>\r\n                Seat ID\r\n            </Table.TextHeaderCell>\r\n              <Table.TextHeaderCell>\r\n                Ratings\r\n            </Table.TextHeaderCell>\r\n            </Table.Head>\r\n            <Table.VirtualBody height={140}>\r\n              {bookingHistory.map(bookingHistory => (\r\n                <Table.Row key={bookingHistory.id} isSelectable onSelect={() => alert(\"Seat #\" + bookingHistory.seatID)}>\r\n                  <Table.TextCell>{bookingHistory.identification}</Table.TextCell>\r\n                  <Table.TextCell>{bookingHistory.timeBooked}</Table.TextCell>\r\n                  <Table.TextCell isNumber>\r\n                    {bookingHistory.seatID}\r\n                  </Table.TextCell>\r\n                  <Table.TextCell isNumber>\r\n                    {bookingHistory.ratings}\r\n                  </Table.TextCell>\r\n                </Table.Row>\r\n              ))}\r\n            </Table.VirtualBody>\r\n          </Table>\r\n        </Pane>\r\n      </div>\r\n    );\r\n  }\r\n} \r\n","D:\\Projects\\CZ3002-Lab-SmartLib\\CZ3002_Xeon\\Front-End\\src\\components\\Footer.js",["196","197","198","199","200","201","202"],"import { React } from \"react\";\r\nimport {\r\n  Pane,\r\n  Text,\r\n  Button,\r\n  Heading,\r\n  ListIcon,\r\n  IconButton,\r\n  SideSheet,\r\n  Paragraph,\r\n} from \"evergreen-ui\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction Footer() {\r\n  return (\r\n    <Pane display=\"flex\" padding={15} background=\"grey\" borderRadius={0}>\r\n      <Pane flex={1} alignItems=\"center\" display=\"flex\">\r\n        <Heading marginRight={10} size={600} color=\"white\">\r\n          Team Xeon\r\n        </Heading>\r\n      </Pane>\r\n      <Pane backgroundColor=\"none\">\r\n    \r\n      </Pane>\r\n    </Pane>\r\n  );\r\n}\r\n\r\nexport default Footer;\r\n","D:\\Projects\\CZ3002-Lab-SmartLib\\CZ3002_Xeon\\Front-End\\src\\components\\CreateAccountPage.js",["203","204","205","206"],"import React, { useState, useRef } from \"react\";\r\nimport { Pane, Text, Button, Heading, Paragraph, TextInput, TextInputField, FormField, Alert} from \"evergreen-ui\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport background from \"./Img/c1.png\";\r\n\r\nimport { useAuth } from '../context/AuthContext'\r\n\r\nfunction CreateAccountPage() {\r\n\r\n  const nameRef = useRef()\r\n  const emailRef = useRef()\r\n  const passwordRef = useRef()\r\n  const passwordConfirmRef = useRef()\r\n  const {signup} = useAuth()\r\n  const [error, setError] = useState('')\r\n  const [loading, setLoading] = useState(false)\r\n  const history = useHistory()\r\n\r\n  async function handleSubmit(e) {\r\n    e.preventDefault()  //Prevent from refreshing\r\n\r\n    if (passwordRef.current.value !== passwordConfirmRef.current.value) {\r\n      console.log(\"Details do not match\");\r\n      return setError('Passwords do not match') // We want to immediately get out of the Fn without going to the signup Fn\r\n    }\r\n\r\n    if ((emailRef.current.value).includes(\"admin\")) {\r\n      console.log(\"Details do not match\");\r\n      return setError('You are not authorized to create an admin account.') // We want to immediately get out of the Fn without going to the signup Fn\r\n    }\r\n\r\n    try {\r\n      setError('')\r\n      setLoading(true) //Prevent them from creating multiple acc at the same time when keep clicking submit button\r\n      await signup(emailRef.current.value, passwordRef.current.value)\r\n      history.push(\"/\")\r\n      console.log(\"Sign in\");\r\n    } catch {\r\n      setError('Failed to create an account')\r\n    }\r\n    setLoading(false) //Aft sign up \r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Pane backgroundImage={`url(${background})`} display=\"flex\" alignItems=\"center\" justifyContent=\"center\" padding={100} flexDirection=\"column\">\r\n        <Heading fontSize={100} color={'white'}>Create Account</Heading>\r\n        <Text size={600} color={'white'}><br></br><br></br><br></br>Making life simpler for you!</Text>\r\n      </Pane>\r\n      <Pane height={1000} backgroundColor=\"beige\" display=\"flex\" justifyContent=\"center\" padding={20}>\r\n        <form onSubmit={handleSubmit}>\r\n          <Heading size={800} >Create New Account</Heading>\r\n          <Text><br></br></Text>\r\n          \r\n          {(error != '') ? (<Pane>\r\n            <Alert\r\n              intent=\"danger\"\r\n              title={error}\r\n            />\r\n          </Pane>) : (<Pane></Pane>)}\r\n\r\n          <TextInputField\r\n            id=\"name\"\r\n            required\r\n            label=\"Name\"\r\n            placeholder=\"Jacob Ballas\"\r\n            inputHeight={45}\r\n            inputWidth={450}\r\n            ref={nameRef}\r\n          />\r\n          <TextInputField\r\n            id=\"email\"\r\n            required\r\n            label=\"School Email\"\r\n            placeholder=\"username@e.ntu.edu.sg\"\r\n            inputHeight={45}\r\n            inputWidth={450}\r\n            type=\"email\"\r\n            ref={emailRef}\r\n          />\r\n          <TextInputField\r\n            id=\"password\"\r\n            required\r\n            label=\"Password\"\r\n            secureTextEntry={true}\r\n            inputHeight={45}\r\n            inputWidth={450}\r\n            type=\"password\"\r\n            ref={passwordRef}\r\n          />\r\n          <TextInputField\r\n            id=\"confirmPassword\"\r\n            required\r\n            label=\"Confirm Password\"\r\n            inputHeight={45}\r\n            inputWidth={450}\r\n            type=\"password\"\r\n            ref={passwordConfirmRef}\r\n          />\r\n          {/* This is the container/pane for the login section */}\r\n          <Pane display=\"flex\" borderRadius={3}>\r\n            <Pane flex={1} alignItems=\"center\" display=\"flex\">\r\n              <Link to=\"/ForgetPassword\">Forget Password?</Link>\r\n            </Pane>\r\n            <Pane paddingBottom={20}>\r\n              <Button appearance=\"primary\" height={48} type=\"submit\" disabled={loading}>Create Account</Button>\r\n              {/* <Link to=\"/Login\" style={{ textDecoration: \"none\" }}> {/* textDecoration has to set to none or else the button will have a line below the Login text\r\n                \r\n              </Link> */}\r\n            </Pane>\r\n          </Pane>\r\n        </form>\r\n      </Pane>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CreateAccountPage;\r\n","D:\\Projects\\CZ3002-Lab-SmartLib\\CZ3002_Xeon\\Front-End\\src\\components\\SeatInformationPage.js",["207","208","209","210","211","212"],"import React from \"react\";\r\nimport { Pane, Text, Button, Heading, Paragraph, TextInputField, FormField, Avatar, BackButton, CrossIcon, InfoSignIcon, EditIcon, WarningSignIcon } from \"evergreen-ui\";\r\nimport { Link } from \"react-router-dom\";\r\nimport background from \"./Img/Stress.png\";\r\n\r\nfunction SeatInformationPage() {\r\n  return (\r\n    <div>\r\n      {/* Back Button */}\r\n      <Pane paddingBottom={20}>\r\n        <Link to=\"/\" style={{ textDecoration: \"none\" }}> {/* textDecoration has to set to none or else the button will have a line below the Login text */}\r\n          <BackButton marginLeft={16} marginTop={16} intent=\"success\" height={48} />\r\n        </Link>\r\n      </Pane>\r\n\r\n      {/* Seat description including avatar*/}\r\n      <Pane display=\"flex\" padding={16} borderRadius={3} marginTop={20}> {/* Parent class, defiines the row*/}\r\n        <Pane padding={16} alignItems=\"center\" marginLeft={60} > {/* Children class, defiines the column*/}\r\n          <Avatar isSolid name=\"S 1\" size={300} />\r\n        </Pane>\r\n        <Pane flex={1} display=\"flex\" marginLeft={30} padding={16}>\r\n          <Pane padding={16}>\r\n            <Pane flex={1} display=\"flex\">\r\n              <Pane>\r\n                <InfoSignIcon color=\"info\" marginRight={16} size={30} />\r\n              </Pane>\r\n              <Heading size={800} >Seat #120</Heading>\r\n            </Pane>\r\n            <Pane>\r\n              <Heading size={800} >Description</Heading>\r\n            </Pane>\r\n            <Pane marginTop={16}>\r\n              <Text size={600}>- Some description about the chair location(Powered/Aircon etc)<br></br> - This box should be dynamic depending on the id of the seat.\r\n              </Text>\r\n            </Pane>\r\n\r\n            {/* Booking Button*/}\r\n            <Pane display=\"flex\" marginTop={100}>\r\n              <Pane flex={1} alignItems=\"center\" display=\"flex\">\r\n                <WarningSignIcon color=\"warning\" size={30}marginRight={16} />\r\n                <Heading size={600} color={\"red\"}>Please be at your seat by 15 mins<br></br>\r\n                or your booking will be terminated</Heading>\r\n              </Pane>\r\n              <Pane>\r\n                {/* Below you can see the marginRight property on a Button. */}\r\n                <Link to=\"/Login\" style={{ textDecoration: \"none\" }}> {/* textDecoration has to set to none or else the button will have a line below the Login text */}\r\n                  <Button appearance=\"primary\" height={48}>Book</Button>\r\n                </Link>\r\n              </Pane>\r\n            </Pane>\r\n\r\n          </Pane>\r\n        </Pane>\r\n      </Pane>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SeatInformationPage;\r\n","D:\\Projects\\CZ3002-Lab-SmartLib\\CZ3002_Xeon\\Front-End\\src\\components\\LoginPage.js",["213","214","215","216"],"D:\\Projects\\CZ3002-Lab-SmartLib\\CZ3002_Xeon\\Front-End\\src\\contexts\\SeatContext.js",[],"D:\\Projects\\CZ3002-Lab-SmartLib\\CZ3002_Xeon\\Front-End\\src\\contexts\\SelectSeatContext.js",[],"D:\\Projects\\CZ3002-Lab-SmartLib\\CZ3002_Xeon\\Front-End\\src\\components\\MapSelectorPane.js",["217","218","219","220","221","222","223","224","225","226","227","228"],"import React, { useState, useContext } from \"react\";\r\nimport { Pane, Text, Button, Heading, SegmentedControl, Dialog, ErrorIcon, HandUpIcon } from \"evergreen-ui\";\r\nimport Component from \"@reactions/component\";\r\nimport { SeatContext } from '../contexts/SeatContext';\r\nimport { SelectedSeatContext } from '../contexts/SelectSeatContext';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport SeatsList from \"./seatmap/SeatsList\";\r\n\r\nfunction MapSelectorPane() {\r\n  \r\n  const [seats, setSeats] = useContext(SeatContext);\r\n  const [selected, setSelected] = useContext(SelectedSeatContext);\r\n  const history = useHistory();\r\n  \r\n  function occupancy(keyword) {\r\n    var avail = 0;\r\n    var total = seats.length;\r\n    var i;\r\n    for (i = 0; i < seats.length; i++){\r\n      if (seats[i].status == keyword) avail++;\r\n    }\r\n    return (avail/total*100);\r\n  }\r\n\r\n  function countSeats(keyword) {\r\n    var num = 0;\r\n    var i;\r\n    for (i = 0; i < seats.length; i++){\r\n        if(keyword=='Unavailable')\r\n        {\r\n            if(seats[i].unavailable==true) num++;\r\n        }\r\n        else\r\n        {\r\n            if (seats[i].status == keyword && seats[i].unavailable==false) num++;\r\n        }\r\n\r\n    }\r\n    return (num);\r\n  }\r\n  // console.log(seats[0].status);\r\n\r\n  function clickBook() {\r\n    console.log(\"Booked\");\r\n    history.push('/SeatInformation');\r\n  }\r\n\r\n    return (\r\n      <div>\r\n        <Heading padding={10} size={700}>The library has {seats.length} seats in total.</Heading>\r\n        <Heading padding={10} size={700}>The library has {countSeats('Available')} available seats, {countSeats('Reserved')} reserved seats, {countSeats('Occupied')} occupied seats, {countSeats('Hogged')} hogged seats, {countSeats('Unavailable')} unavailable seats.</Heading>\r\n        <Heading padding={10} size={700}>The library is currently {occupancy('Available')}% full.</Heading>\r\n        \r\n        {/* Segmented Control Bar*/}\r\n        <Component\r\n          initialState={{\r\n            options: [\r\n              { label: \"Level 2\", value: 2 },\r\n              { label: \"Level 3\", value: 3 },\r\n              { label: \"Level 4\", value: 4 },\r\n              { label: \"Level 5\", value: 5 },\r\n            ],\r\n            value: selected.level,\r\n          }}\r\n        >\r\n          {({ state, setState }) => (\r\n            <SegmentedControl\r\n              width=\"auto\"\r\n              marginTop={10}\r\n              options={state.options}\r\n              value={state.value}\r\n              onChange={(value) => { setState({ value }); setSelected({seat:0, level: value });}}\r\n            />\r\n          )}\r\n        </Component>\r\n        \r\n        <Pane\r\n          height=\"auto\"\r\n          width=\"auto\"\r\n          marginTop={20}\r\n          background=\"tint2\"\r\n          border=\"default\"\r\n          borderRadius={5}\r\n          justifyContent=\"center\"\r\n          alignItems=\"center\"\r\n          display=\"flex\"\r\n        >\r\n            <SeatsList seats={seats} editmode={false}/>\r\n        </Pane>\r\n        \r\n        <h2>Selected Seat: {(selected.seat == 0) ? 'None' : selected.seat}</h2>\r\n        <h2>Selected Level: { selected.level }</h2>\r\n        \r\n        {/* Book Button and Dialog */}\r\n        <Component initialState={{ isShown: false }}>\r\n          {({ state, setState }) => (\r\n            <Pane>\r\n              <Dialog\r\n                isShown={state.isShown}\r\n                //title={\"Seat \"+ (seats.find((theSeat) => theSeat.id == selected.seat)).status}\r\n                title={\"Seat Unavailable\"}\r\n                onCloseComplete={() => setState({ isShown: false })}\r\n                //confirmLabel=\"Custom Label\"\r\n                hasFooter={false}\r\n              >\r\n                <ErrorIcon size={30} marginRight={10}/>The seat you have chosen is not available for booking. \r\n              </Dialog>\r\n\r\n              <Button\r\n                appearance=\"primary\"\r\n                iconBefore={HandUpIcon}\r\n                height={40}\r\n                disabled={selected.seat == 0}\r\n                onClick={() => (seats.find((theSeat) => theSeat.id == selected.seat)).status != \"Available\" ? setState({ isShown: true }) : clickBook()}\r\n              >\r\n                Book\r\n              </Button>\r\n            </Pane>\r\n          )}\r\n        </Component>\r\n      </div>\r\n    );\r\n}\r\n\r\nexport default MapSelectorPane;\r\n","D:\\Projects\\CZ3002-Lab-SmartLib\\CZ3002_Xeon\\Front-End\\src\\services\\firebase.js",[],"D:\\Projects\\CZ3002-Lab-SmartLib\\CZ3002_Xeon\\Front-End\\src\\components\\AdminHomePage.js",["229","230","231","232","233","234","235","236","237","238","239","240","241","242"],"import React, {useContext, useState, useEffect} from \"react\";\r\nimport {\r\n    Pane,\r\n    Text,\r\n    Button,\r\n    Heading,\r\n    SegmentedControl,\r\n    TextInput,\r\n    TextInputField,\r\n    AddIcon,\r\n    ResetIcon,\r\n    SearchIcon,\r\n    EditIcon, DeleteIcon\r\n} from \"evergreen-ui\";\r\nimport { Link } from \"react-router-dom\";\r\nimport L2C1 from \"./Img/L2C1.jpg\";\r\nimport L3C1 from \"./Img/L3C1.jpg\";\r\nimport L4C1 from \"./Img/L4C1.jpg\";\r\n//import L4C1 from \"https://www.homengardeningtips.com/wp-content/uploads/dedicated-home-library.jpg\"\r\nimport L5C1 from \"./Img/L5C1.jpg\";\r\nimport Component from \"@reactions/component\";\r\nimport {SelectedSeatContext} from \"../contexts/SelectSeatContext\";\r\nimport {SeatContext} from \"../contexts/SeatContext\";\r\nimport CamSeatsList from \"./seatmap/CamSeatsList\";\r\nimport SeatsList from \"./seatmap/SeatsList\";\r\nimport './AdminPageStyles.css'\r\nimport Stats from \"./Stats\";\r\n\r\nfunction AdminHomePage(){\r\n\r\n    const [seats, setSeats] = useContext(SeatContext);\r\n    const [selected, setSelected] = useContext(SelectedSeatContext);\r\n    const [statsSel, setStatsSel]=useState({val: 0});\r\n\r\n    useEffect(()=>{console.log(statsSel); },[statsSel]);\r\n\r\n    function cameraSelect(level)\r\n    {\r\n        switch (level) {\r\n            case 2:\r\n                return L2C1;\r\n            case 3:\r\n                return L3C1;\r\n            case 4:\r\n                return L4C1;\r\n            case 5:\r\n                //return L5C1;\r\n                return 'https://www.homengardeningtips.com/wp-content/uploads/library-seating.jpg';\r\n                //return 'http://10.27.35.143:8080/video';\r\n        }\r\n    }\r\n\r\n    return(\r\n        <Pane className={'bgPane'}>\r\n            <div>\r\n                <h2 className={'heading'}>Admin Homepage</h2>\r\n                <Pane className={'masterPane'} border={'none'}>\r\n                    <Pane className={'statsPane'} border={'default'}>\r\n                        <h2 className={'sectionHeading'}>Statistics</h2>\r\n                        {/* Segmented Control Bar*/}\r\n                        <Pane className={'segmentedControlPane'}>\r\n                            <Component\r\n                                initialState={{\r\n                                    options: [\r\n                                        { label: \"Overall\", value: 0 },\r\n                                        { label: \"Level 2\", value: 2 },\r\n                                        { label: \"Level 3\", value: 3 },\r\n                                        { label: \"Level 4\", value: 4 },\r\n                                        { label: \"Level 5\", value: 5 },\r\n                                    ],\r\n                                    value: 0,\r\n                                }}\r\n                            >\r\n                                {({ state, setState }) => (\r\n                                    <SegmentedControl\r\n                                        className={'segmentedControl'}\r\n                                        options={state.options}\r\n                                        value={state.value}\r\n                                        onChange={(value) => { setState({ value }); setStatsSel({val: value})}}\r\n                                    />\r\n                                )}\r\n                            </Component>\r\n                        </Pane>\r\n                        <Stats statsSel={statsSel} seats={seats}/>\r\n                    </Pane>\r\n                    <Pane className={'homepageMapComboPane'} border={'default'}>\r\n                        <h2 className={'sectionHeading'}>Live Status</h2>\r\n                        <Pane className={'segmentedControlPane'}>\r\n                            <Component\r\n                                initialState={{\r\n                                    options: [\r\n                                        { label: \"Level 2\", value: 2 },\r\n                                        { label: \"Level 3\", value: 3 },\r\n                                        { label: \"Level 4\", value: 4 },\r\n                                        { label: \"Level 5\", value: 5 },\r\n                                    ],\r\n                                    value: selected.level,\r\n                                }}\r\n                            >\r\n                                {({ state, setState }) => (\r\n                                    <SegmentedControl\r\n                                        className={'segmentedControl'}\r\n                                        options={state.options}\r\n                                        value={state.value}\r\n                                        onChange={(value) => { setState({ value }); setSelected({seat:0, level: value });}}\r\n                                    />\r\n                                )}\r\n                            </Component>\r\n                        </Pane>\r\n                        <Pane className={'cameraPane'}\r\n                              // backgroundImage={`url(\"http://10.27.35.143:8080/video\")`}\r\n                              backgroundImage={`url(${cameraSelect(selected.level)})`}\r\n                        >\r\n                            <CamSeatsList seats={seats} editmode={false}/>\r\n                        </Pane>\r\n                        <Pane className={'seatMapPane'} border={'none'}>\r\n                            <SeatsList seats={seats} editmode={false}/>\r\n                        </Pane>\r\n                    </Pane>\r\n                    <Pane className={'alertsPane'} border={'default'}>\r\n                        <h2 className={'sectionHeading'}>Alerts</h2>\r\n                    </Pane>\r\n                </Pane>\r\n            </div>\r\n\r\n        </Pane>\r\n\r\n    );\r\n}\r\n\r\nexport default AdminHomePage;","D:\\Projects\\CZ3002-Lab-SmartLib\\CZ3002_Xeon\\Front-End\\src\\components\\ModifySeatsPage.js",["243","244","245","246","247","248","249","250","251"],"import React, {useContext, useEffect, useState} from \"react\";\r\nimport {Pane, Text, Button, Heading, SegmentedControl, TextInput, TextInputField, AddIcon, ResetIcon, SearchIcon, Checkbox, TrashIcon, EditIcon} from \"evergreen-ui\";\r\nimport { Link } from \"react-router-dom\";\r\nimport L2C1 from \"./Img/L2C1.jpg\";\r\nimport L3C1 from \"./Img/L3C1.jpg\";\r\nimport L4C1 from \"./Img/L4C1.jpg\";\r\nimport L5C1 from \"./Img/L5C1.jpg\";\r\nimport Component from \"@reactions/component\";\r\nimport {SelectedSeatContext} from \"../contexts/SelectSeatContext\";\r\nimport {SeatContext} from \"../contexts/SeatContext\";\r\nimport CamSeatsList from \"./seatmap/CamSeatsList\";\r\nimport SeatsList from \"./seatmap/SeatsList\";\r\nimport './AdminPageStyles.css'\r\n\r\nfunction ModifySeatsPage(){\r\n\r\n    const [seats, setSeats] = useContext(SeatContext);\r\n    const [selected, setSelected] = useContext(SelectedSeatContext);\r\n    const [tempSeats, setTempSeats]=useState(seats);\r\n    const defaultSeat = {\r\n        id: null,\r\n        level: selected.level,\r\n        seatName: '',\r\n        cameraId: '',\r\n        x1Img: 0,\r\n        y1Img: 0,\r\n        x2Img: 0,\r\n        y2Img: 0,\r\n        xLoc: 0,\r\n        yLoc: 0,\r\n        status: null,\r\n        unavailable: null\r\n    }\r\n    const [selSeat, setSelSeat]=useState(defaultSeat)\r\n\r\n    const handleChange = (e) => {\r\n        const { id, value } = e.target\r\n        setSelSeat(prevState => ({\r\n            ...prevState,\r\n            [id]: value\r\n        }))\r\n    }\r\n\r\n    const handleCheckbox = (state)=>{\r\n        setSelSeat(prevState => ({\r\n            ...prevState,\r\n            unavailable: state\r\n        }))\r\n    }\r\n\r\n    function modifySeat()\r\n    {\r\n        setSeats(prev=>[...prev, selSeat])\r\n        alert(\"Successfully Added\");\r\n    }\r\n\r\n    function deleteSeat()\r\n    {\r\n        // seats.find((seat)=>seat.id==selected.seat)\r\n        alert(\"Successfully Added\");\r\n    }\r\n\r\n    function previewSeat()\r\n    {\r\n        setTempSeats(seats);\r\n        setTempSeats(prev=>[...prev, selSeat])\r\n        setSelected(prevState=>({...prevState,seat:selSeat.id}))\r\n    }\r\n\r\n    function resetSeat()\r\n    {\r\n        setTempSeats(seats);\r\n        setSelSeat(defaultSeat);\r\n    }\r\n\r\n    function cameraSelect(level)\r\n    {\r\n        switch (level) {\r\n            case 2:\r\n                return L2C1;\r\n            case 3:\r\n                return L3C1;\r\n            case 4:\r\n                return L4C1;\r\n            case 5:\r\n                return L5C1;\r\n        }\r\n    }\r\n\r\n    useEffect(() => {console.log('tempSeats:'); console.log(tempSeats)}, [tempSeats]);\r\n    useEffect(() => {console.log('seats:'); console.log(seats);}, [seats]);\r\n    useEffect(() => {console.log('selSeat:'); console.log(selSeat)}, [selSeat]);\r\n    useEffect(()=>{\r\n        console.log('selected: id: '+selected.id+' lvl: '+selected.level);\r\n        const seat = seats.find((seat)=>seat.id==selected.seat);\r\n        if(seat!=null) setSelSeat(seat);\r\n        else setSelSeat(defaultSeat);\r\n        },[selected])\r\n\r\n    return(\r\n        <Pane className={'bgPane'}>\r\n            <div>\r\n                <h2 className={'heading'}>Modify / Delete Seat</h2>\r\n                {/* Segmented Control Bar*/}\r\n                <Pane className={'segmentedControlPane'}>\r\n                    <Component\r\n                        initialState={{\r\n                            options: [\r\n                                { label: \"Level 2\", value: 2 },\r\n                                { label: \"Level 3\", value: 3 },\r\n                                { label: \"Level 4\", value: 4 },\r\n                                { label: \"Level 5\", value: 5 },\r\n                            ],\r\n                            value: selected.level,\r\n                        }}\r\n                    >\r\n                        {({ state, setState }) => (\r\n                            <SegmentedControl\r\n                                className={'segmentedControl'}\r\n                                options={state.options}\r\n                                value={state.value}\r\n                                onChange={(value) => { setState({ value }); setSelected({seat:0, level: value }); setSelSeat(prevState => ({...prevState, level: value})); }}\r\n                            />\r\n                        )}\r\n                    </Component>\r\n                </Pane>\r\n                <Pane className={'selectionInfoPane'}>\r\n                    <p className={'selectionText'}>Selected Seat ID: {selSeat.id} </p>\r\n                    <p className={'selectionText'}>Level: { selected.level }</p>\r\n                    <p className={'selectionText'}>Seat Name: {selSeat.seatName}</p>\r\n                </Pane>\r\n                <Pane className={'masterPane'} border={'none'}>\r\n                    <Pane className={'cameraControlPane'} border={'default'}>\r\n                        <Pane className={'cameraPane'} backgroundImage={`url(${cameraSelect(selected.level)})`}>\r\n                            <CamSeatsList seats={tempSeats} editmode={true}/>\r\n                        </Pane>\r\n\r\n                        {/*<Pane>*/}\r\n                        {/*    <DrawRect/>*/}\r\n                        {/*</Pane>*/}\r\n\r\n                        <Pane className={'infoPane'} paddingBottom={20}>\r\n                            <Text className={'infoText'}>cameraId: {selSeat.cameraId}</Text>\r\n                            <Text className={'infoText'}>x1Img: {selSeat.x1Img}</Text>\r\n                            <Text className={'infoText'}>y1Img: {selSeat.y1Img}</Text>\r\n                            <Text className={'infoText'}>x2Img: {selSeat.x2Img}</Text>\r\n                            <Text className={'infoText'}>y2Img: {selSeat.y2Img}</Text>\r\n                        </Pane>\r\n                        <Pane className={'inputPane'}>\r\n                            <TextInputField\r\n                                className={'inputFieldBox'}\r\n                                id=\"cameraId\" label=\"cameraId :\" placeholder=\"eg. L2C1\"\r\n                                value={selSeat.cameraId} onChange={handleChange}\r\n                            />\r\n                            <TextInputField\r\n                                className={'inputFieldBox'}\r\n                                id=\"x1Img\" label=\"x1 :\" placeholder=\"0-1280\"\r\n                                value={selSeat.x1Img} onChange={handleChange}\r\n                            />\r\n                            <TextInputField\r\n                                className={'inputFieldBox'}\r\n                                id=\"y1Img\" label=\"y1 :\" placeholder=\"0-720\"\r\n                                value={selSeat.y1Img} onChange={handleChange}\r\n                            />\r\n                            <TextInputField\r\n                                className={'inputFieldBox'}\r\n                                id=\"x2Img\" label=\"x2 :\" placeholder=\"0-1280\"\r\n                                value={selSeat.x2Img} onChange={handleChange}\r\n                            />\r\n                            <TextInputField\r\n                                className={'inputFieldBox'}\r\n                                id=\"y2Img\" label=\"y2 :\" placeholder=\"0-720\"\r\n                                value={selSeat.y2Img} onChange={handleChange}\r\n                            />\r\n                        </Pane>\r\n                    </Pane>\r\n                    <Pane className={'seatMapControlPane'} border={'default'}>\r\n                        <Pane className={'seatMapPane'} border={'none'}>\r\n                            <SeatsList seats={tempSeats} editmode={true}/>\r\n                        </Pane>\r\n                        <Pane className={'infoPane'}>\r\n                            <Text className={'infoText'}>id: {selSeat.id}</Text>\r\n                            <Text className={'infoText'}>level: {selSeat.level}</Text>\r\n                            <Text className={'infoText'}>seatName: {selSeat.seatName}</Text>\r\n                        </Pane>\r\n                        <Pane className={'infoPane'} paddingBottom={20}>\r\n                            <Text className={'infoText'}>xLoc: {selSeat.xLoc}</Text>\r\n                            <Text className={'infoText'}>yLoc: {selSeat.yLoc}</Text>\r\n                            <Text className={'infoText'}>status: {selSeat.status}</Text>\r\n                            <Text className={'infoText'}>unavailable: {selSeat.unavailable?'true':'false'}</Text>\r\n                        </Pane>\r\n                        <Pane className={'inputPane'}>\r\n                            <TextInputField\r\n                                className={'inputFieldBox'}\r\n                                id=\"id\" label=\"id :\" placeholder=\"unique id\"\r\n                                value={selSeat.id} onChange={handleChange} disabled\r\n                            />\r\n                            <TextInputField\r\n                                className={'inputFieldBox'}\r\n                                id=\"level\" label=\"Level :\" placeholder=\"2-5\"\r\n                                value={selSeat.level} onChange={handleChange} disabled\r\n                            />\r\n                            <TextInputField\r\n                                className={'inputFieldBox'}\r\n                                id=\"seatName\" label=\"Seat Name :\" placeholder=\"eg. LWN-L2-13\"\r\n                                value={selSeat.seatName} onChange={handleChange}\r\n                            />\r\n                        </Pane>\r\n                        <Pane className={'inputPane'}>\r\n                            <TextInputField\r\n                                className={'inputFieldBox'}\r\n                                id=\"xLoc\" label=\"xLoc :\" placeholder=\"0-800\"\r\n                                value={selSeat.xLoc} onChange={handleChange}\r\n                            />\r\n                            <TextInputField\r\n                                className={'inputFieldBox'}\r\n                                id=\"yLoc\" label=\"yLoc :\" placeholder=\"0-800\"\r\n                                value={selSeat.yLoc} onChange={handleChange}\r\n                            />\r\n                            <TextInputField\r\n                                className={'inputFieldBox'}\r\n                                id=\"status\" label=\"Status :\" placeholder=\"eg. Available\"\r\n                                value={selSeat.status} onChange={handleChange} disabled\r\n                            />\r\n                            {/*<TextInputField*/}\r\n                            {/*    className={'inputFieldBox'}*/}\r\n                            {/*    id=\"unavailable\" label=\"Unavailable :\" placeholder=\"0-800\"*/}\r\n                            {/*    value={selSeat.unavailable} onChange={handleChange} disabled*/}\r\n                            {/*/>*/}\r\n                            <Component initialState={{ checked: false }}>\r\n                                {({ state, setState }) => (\r\n                                    <Checkbox\r\n                                        className={'checkBox'}\r\n                                        label=\"Unavailable\"\r\n                                        checked={selSeat.unavailable}\r\n                                        onChange={e => {setState({ checked: e.target.checked }); setSelSeat(prevState => ({...prevState, unavailable: !state.checked})); }}\r\n                                    />\r\n                                )}\r\n                            </Component>\r\n                        </Pane>\r\n                    </Pane>\r\n                </Pane>\r\n                <Pane className={'buttonPane'}>\r\n                    <Button className={'button'} onClick={previewSeat} appearance=\"primary\" iconBefore={SearchIcon}>Preview</Button>\r\n                    <Button className={'button'} onClick={resetSeat} marginRight={16} appearance=\"primary\" intent={\"warning\"} iconBefore={ResetIcon}>Reset</Button>\r\n                    <Button className={'button'} onClick={modifySeat} marginRight={16} appearance=\"primary\" intent={\"success\"} iconBefore={EditIcon}>Modify Seat</Button>\r\n                    <Button className={'button'} onClick={modifySeat} marginRight={16} appearance=\"primary\" intent={\"danger\"} iconBefore={TrashIcon}>Delete Seat</Button>\r\n                </Pane>\r\n            </div>\r\n\r\n        </Pane>\r\n\r\n    );\r\n}\r\n\r\nexport default ModifySeatsPage;","D:\\Projects\\CZ3002-Lab-SmartLib\\CZ3002_Xeon\\Front-End\\src\\components\\AddSeatsPage.js",["252","253","254","255","256","257"],"import React, {useContext, useEffect, useState} from \"react\";\r\nimport {\r\n    Pane,\r\n    Text,\r\n    Button,\r\n    Heading,\r\n    SegmentedControl,\r\n    TextInput,\r\n    TextInputField,\r\n    AddIcon,\r\n    ResetIcon,\r\n    SearchIcon,\r\n    Checkbox\r\n} from \"evergreen-ui\";\r\nimport { Link } from \"react-router-dom\";\r\nimport L2C1 from \"./Img/L2C1.jpg\";\r\nimport L3C1 from \"./Img/L3C1.jpg\";\r\nimport L4C1 from \"./Img/L4C1.jpg\";\r\nimport L5C1 from \"./Img/L5C1.jpg\";\r\nimport ImagePlane from \"./seatmap/ImagePlane\";\r\nimport Component from \"@reactions/component\";\r\nimport {SelectedSeatContext} from \"../contexts/SelectSeatContext\";\r\nimport {SeatContext} from \"../contexts/SeatContext\";\r\nimport DrawRect from \"./DrawRect\";\r\nimport CamSeatsList from \"./seatmap/CamSeatsList\";\r\nimport SeatsList from \"./seatmap/SeatsList\";\r\nimport './AdminPageStyles.css'\r\n\r\nfunction AddSeatsPage(){\r\n\r\n    const [seats, setSeats] = useContext(SeatContext);\r\n    const [selected, setSelected] = useContext(SelectedSeatContext);\r\n    const [tempSeats, setTempSeats]=useState(seats);\r\n    const defaultSeat = {\r\n        id: seats[seats.length-1].id+1,\r\n        level: selected.level,\r\n        seatName: '',\r\n        cameraId: '',\r\n        x1Img: 0,\r\n        y1Img: 0,\r\n        x2Img: 0,\r\n        y2Img: 0,\r\n        xLoc: 0,\r\n        yLoc: 0,\r\n        status: 'Available',\r\n        unavailable: false\r\n    }\r\n    const [newSeat, setNewSeat]=useState(defaultSeat)\r\n\r\n    const handleChange = (e) => {\r\n        const { id, value } = e.target\r\n        setNewSeat(prevState => ({\r\n            ...prevState,\r\n            [id]: value\r\n        }))\r\n    }\r\n\r\n    function addSeat()\r\n    {\r\n        setSeats(prev=>[...prev, newSeat])\r\n        alert(\"Successfully Added\");\r\n    }\r\n\r\n    function previewSeat()\r\n    {\r\n        setTempSeats(seats);\r\n        setTempSeats(prev=>[...prev, newSeat])\r\n        setSelected(prevState=>({...prevState,seat:newSeat.id}))\r\n    }\r\n\r\n    function resetSeat()\r\n    {\r\n        setTempSeats(seats);\r\n        setNewSeat(defaultSeat);\r\n    }\r\n\r\n    function cameraSelect(level)\r\n    {\r\n        switch (level) {\r\n            case 2:\r\n                return L2C1;\r\n            case 3:\r\n                return L3C1;\r\n            case 4:\r\n                return L4C1;\r\n            case 5:\r\n                return L5C1;\r\n        }\r\n    }\r\n\r\n    useEffect(() => {console.log('tempSeats:'); console.log(tempSeats)}, [tempSeats]);\r\n    useEffect(() => {console.log('seats:'); console.log(seats); setNewSeat(prevState => ({...prevState,id:seats[seats.length-1].id+1}))}, [seats]);\r\n    useEffect(() => {console.log('newSeat:'); console.log(newSeat)}, [newSeat]);\r\n\r\n    return(\r\n        <Pane className={'bgPane'}>\r\n            <div>\r\n                <h2 className={'heading'}>Add New Seat</h2>\r\n                {/* Segmented Control Bar*/}\r\n                <Pane className={'segmentedControlPane'}>\r\n                    <Component\r\n                        initialState={{\r\n                            options: [\r\n                                { label: \"Level 2\", value: 2 },\r\n                                { label: \"Level 3\", value: 3 },\r\n                                { label: \"Level 4\", value: 4 },\r\n                                { label: \"Level 5\", value: 5 },\r\n                            ],\r\n                            value: selected.level,\r\n                        }}\r\n                    >\r\n                        {({ state, setState }) => (\r\n                            <SegmentedControl\r\n                                className={'segmentedControl'}\r\n                                options={state.options}\r\n                                value={state.value}\r\n                                onChange={(value) => { setState({ value }); setSelected({seat:0, level: value }); setNewSeat(prevState => ({...prevState, level: value}))}}\r\n                            />\r\n                        )}\r\n                    </Component>\r\n                </Pane>\r\n                <Pane className={'masterPane'} border={'none'}>\r\n                        <Pane className={'cameraControlPane'} border={'default'}>\r\n                            <Pane className={'cameraPane'} backgroundImage={`url(${cameraSelect(selected.level)})`}>\r\n                                <CamSeatsList seats={tempSeats} editmode={true}/>\r\n                            </Pane>\r\n\r\n                            {/*<Pane>*/}\r\n                            {/*    <DrawRect/>*/}\r\n                            {/*</Pane>*/}\r\n\r\n                            <Pane className={'infoPane'} paddingBottom={20}>\r\n                                <Text className={'infoText'}>cameraId: {newSeat.cameraId}</Text>\r\n                                <Text className={'infoText'}>x1Img: {newSeat.x1Img}</Text>\r\n                                <Text className={'infoText'}>y1Img: {newSeat.y1Img}</Text>\r\n                                <Text className={'infoText'}>x2Img: {newSeat.x2Img}</Text>\r\n                                <Text className={'infoText'}>y2Img: {newSeat.y2Img}</Text>\r\n                            </Pane>\r\n                            <Pane className={'inputPane'}>\r\n                                <TextInputField\r\n                                    className={'inputFieldBox'}\r\n                                    id=\"cameraId\" label=\"cameraId :\" placeholder=\"eg. L2C1\"\r\n                                    value={newSeat.cameraId} onChange={handleChange}\r\n                                />\r\n                                <TextInputField\r\n                                    className={'inputFieldBox'}\r\n                                    id=\"x1Img\" label=\"x1 :\" placeholder=\"0-1280\"\r\n                                    value={newSeat.x1Img} onChange={handleChange}\r\n                                />\r\n                                <TextInputField\r\n                                    className={'inputFieldBox'}\r\n                                    id=\"y1Img\" label=\"y1 :\" placeholder=\"0-720\"\r\n                                    value={newSeat.y1Img} onChange={handleChange}\r\n                                />\r\n                                <TextInputField\r\n                                    className={'inputFieldBox'}\r\n                                    id=\"x2Img\" label=\"x2 :\" placeholder=\"0-1280\"\r\n                                    value={newSeat.x2Img} onChange={handleChange}\r\n                                />\r\n                                <TextInputField\r\n                                    className={'inputFieldBox'}\r\n                                    id=\"y2Img\" label=\"y2 :\" placeholder=\"0-720\"\r\n                                    value={newSeat.y2Img} onChange={handleChange}\r\n                                />\r\n                            </Pane>\r\n                        </Pane>\r\n                        <Pane className={'seatMapControlPane'} border={'default'}>\r\n                            <Pane className={'seatMapPane'} border={'none'}>\r\n                                <SeatsList seats={tempSeats} editmode={true}/>\r\n                            </Pane>\r\n                            <Pane className={'infoPane'}>\r\n                                <Text className={'infoText'}>id: {newSeat.id}</Text>\r\n                                <Text className={'infoText'}>level: {newSeat.level}</Text>\r\n                                <Text className={'infoText'}>seatName: {newSeat.seatName}</Text>\r\n                            </Pane>\r\n                            <Pane className={'infoPane'} paddingBottom={20}>\r\n                                <Text className={'infoText'}>xLoc: {newSeat.xLoc}</Text>\r\n                                <Text className={'infoText'}>yLoc: {newSeat.yLoc}</Text>\r\n                                <Text className={'infoText'}>status: {newSeat.status}</Text>\r\n                                <Text className={'infoText'}>unavailable: {newSeat.unavailable?'true':'false'}</Text>\r\n                            </Pane>\r\n                            <Pane className={'inputPane'}>\r\n                                <TextInputField\r\n                                    className={'inputFieldBox'}\r\n                                    id=\"id\" label=\"id :\" placeholder=\"unique id\"\r\n                                    value={newSeat.id} onChange={handleChange} disabled\r\n                                />\r\n                                <TextInputField\r\n                                    className={'inputFieldBox'}\r\n                                    id=\"level\" label=\"Level :\" placeholder=\"2-5\"\r\n                                    value={newSeat.level} onChange={handleChange} disabled\r\n                                />\r\n                                <TextInputField\r\n                                    className={'inputFieldBox'}\r\n                                    id=\"seatName\" label=\"Seat Name :\" placeholder=\"eg. LWN-L2-13\"\r\n                                    value={newSeat.seatName} onChange={handleChange}\r\n                                />\r\n                            </Pane>\r\n                            <Pane className={'inputPane'}>\r\n                                <TextInputField\r\n                                    className={'inputFieldBox'}\r\n                                    id=\"xLoc\" label=\"xLoc :\" placeholder=\"0-800\"\r\n                                    value={newSeat.xLoc} onChange={handleChange}\r\n                                />\r\n                                <TextInputField\r\n                                    className={'inputFieldBox'}\r\n                                    id=\"yLoc\" label=\"yLoc :\" placeholder=\"0-800\"\r\n                                    value={newSeat.yLoc} onChange={handleChange}\r\n                                />\r\n                                <TextInputField\r\n                                    className={'inputFieldBox'}\r\n                                    id=\"status\" label=\"Status :\" placeholder=\"eg. Available\"\r\n                                    value={newSeat.status} onChange={handleChange} disabled\r\n                                />\r\n                                {/*<TextInputField*/}\r\n                                {/*    className={'inputFieldBox'}*/}\r\n                                {/*    id=\"unavailable\" label=\"Unavailable :\" placeholder=\"0-800\"*/}\r\n                                {/*    value={newSeat.unavailable} onChange={handleChange} disabled*/}\r\n                                {/*/>*/}\r\n                                <Component initialState={{ checked: false }}>\r\n                                    {({ state, setState }) => (\r\n                                        <Checkbox\r\n                                            className={'checkBox'}\r\n                                            label=\"Unavailable\"\r\n                                            checked={state.checked}\r\n                                            onChange={e => {setState({ checked: e.target.checked }); setNewSeat(prevState => ({...prevState, unavailable: !state.checked})); }}\r\n                                        />\r\n                                    )}\r\n                                </Component>\r\n                            </Pane>\r\n                        </Pane>\r\n                </Pane>\r\n                <Pane className={'buttonPane'}>\r\n                    <Button className={'button'} onClick={previewSeat} appearance=\"primary\" iconBefore={SearchIcon}>Preview</Button>\r\n                    <Button className={'button'} onClick={resetSeat} marginRight={16} appearance=\"primary\" intent={\"warning\"} iconBefore={ResetIcon}>Reset</Button>\r\n                    <Button className={'button'} onClick={addSeat} marginRight={16} appearance=\"primary\" intent={\"success\"} iconBefore={AddIcon}>Add Seat</Button>\r\n                </Pane>\r\n            </div>\r\n\r\n        </Pane>\r\n\r\n    );\r\n}\r\n\r\nexport default AddSeatsPage;","D:\\Projects\\CZ3002-Lab-SmartLib\\CZ3002_Xeon\\Front-End\\src\\components\\seatmap\\SeatsList.js",["258","259","260"],"import React, { useContext } from 'react'\r\nimport Seat from \"./Seat\";\r\nimport { SelectedSeatContext, SelectSeatContext } from '../../contexts/SelectSeatContext';\r\nimport GridLines from \"./GridLines\";\r\n\r\nexport function SeatsList(props) {\r\n    \r\n    const [select, setSelect] = useContext(SelectedSeatContext);\r\n\r\n    function editMode(mode)\r\n    {\r\n        if(mode) return <GridLines/>\r\n    }\r\n    return (\r\n        <svg viewBox='0 0 800 800'>\r\n            {editMode(props.editmode)}\r\n            <rect className={'mapBorder'} x={1} y={1} rx={15} ry={15} width={800-2} height={800-2} fill='none' stroke='#CCCCCC' strokeWidth='2px' />\r\n            {props.seats.map((seat) => {\r\n                return ((select.level == seat.level) ? <Seat seat={seat} key={seat.id} /> : <div key={seat.id}></div>);\r\n                //return (<Seat seat={seat} key={seat.id} />);\r\n            })}\r\n        </svg>\r\n    );\r\n}\r\n\r\nexport default SeatsList\r\n","D:\\Projects\\CZ3002-Lab-SmartLib\\CZ3002_Xeon\\Front-End\\src\\components\\seatmap\\ImagePlane.js",["261"],"import React, { useState } from \"react\";\r\n\r\nfunction ImagePlane() {\r\n\r\n    const [planeCoords, setplaneCoords]=useState(\r\n        [\r\n            {\r\n                x:100,\r\n                y:300\r\n            },\r\n            {\r\n                x:600,\r\n                y:300\r\n            },\r\n            {\r\n                x:1100,\r\n                y:450\r\n            },\r\n            {\r\n                x:80,\r\n                y:550\r\n            },\r\n            ])\r\n\r\n    return (\r\n        <g>\r\n            <circle r={12} cx={planeCoords[0].x} cy={planeCoords[0].y} stroke={\"#0000FF\"} strokeWidth={5} fill={\"#FF0000\"}/>\r\n            <circle r={12} cx={planeCoords[1].x} cy={planeCoords[1].y} stroke={\"#0000FF\"} strokeWidth={5} fill={\"#FF0000\"}/>\r\n            <circle r={12} cx={planeCoords[2].x} cy={planeCoords[2].y} stroke={\"#0000FF\"} strokeWidth={5} fill={\"#FF0000\"}/>\r\n            <circle r={12} cx={planeCoords[3].x} cy={planeCoords[3].y} stroke={\"#0000FF\"} strokeWidth={5} fill={\"#FF0000\"}/>\r\n        </g>\r\n    );\r\n}\r\n\r\nexport default ImagePlane;","D:\\Projects\\CZ3002-Lab-SmartLib\\CZ3002_Xeon\\Front-End\\src\\components\\seatmap\\CamSeatsList.js",["262","263","264"],"import React, { useContext } from 'react'\r\nimport CamSeat from \"./CamSeat\";\r\nimport { SelectedSeatContext, SelectSeatContext } from '../../contexts/SelectSeatContext';\r\nimport GridLines from \"./GridLines\";\r\n\r\nexport function CamSeatsList(props) {\r\n    \r\n    const [select, setSelect] = useContext(SelectedSeatContext);\r\n\r\n    function editMode(mode)\r\n    {\r\n        if(mode) return <GridLines/>\r\n    }\r\n    return (\r\n        <svg width=\"80vw\" viewBox=\"0 0 1280 720\">\r\n            {editMode(props.editmode)}\r\n            {/*<rect x='0' y='0' width='1280' height='720' fill='none' stroke='#AAAAAA' strokeWidth='5px' />*/}\r\n            {props.seats.map((seat) => {\r\n                return ((select.level == seat.level) ? <CamSeat seat={seat} key={seat.id} /> : <div key={seat.id}></div>);\r\n                //return (<Seat seat={seat} key={seat.id} />);\r\n            })}\r\n        </svg>\r\n    );\r\n}\r\n\r\nexport default CamSeatsList\r\n","D:\\Projects\\CZ3002-Lab-SmartLib\\CZ3002_Xeon\\Front-End\\src\\components\\Stats.js",["265","266","267","268","269","270","271","272"],"import React, {useState} from 'react'\r\nimport Chart from 'react-google-charts'\r\nimport {\r\n    Pane,\r\n} from \"evergreen-ui\";\r\n\r\nexport default function Stats(props){\r\n\r\n    // const [title, setTitle]=useState('');\r\n    // console.log(props.statsSel.val)\r\n    //\r\n    // switch (props.statsSel.val)\r\n    // {\r\n    //     case 0: setTitle('Overall');\r\n    //     case 2: setTitle('Level 2');\r\n    //     case 3: setTitle('Level 3');\r\n    //     case 4: setTitle('Level 4');\r\n    //     case 5: setTitle('Level 5');\r\n    // }\r\n\r\n    function countStats(seats) {\r\n        var stats = {total: 0, avail: 0,occupied: 0, reserved: 0, hogged: 0, unavail: 0,};\r\n        var i;\r\n        let currSeats= seats.f\r\n        stats.total=seats.length;\r\n        for (i = 0; i < seats.length; i++){\r\n            if(seats[i].unavailable==true) stats.unavail++;\r\n            else\r\n            {\r\n                if (seats[i].status == 'Available') stats.avail++;\r\n                else if (seats[i].status == 'Occupied') stats.occupied++;\r\n                else if (seats[i].status == 'Reserved') stats.reserved++;\r\n                else if (seats[i].status == 'Hogged') stats.hogged++;\r\n            }\r\n\r\n        }\r\n        return (stats);\r\n    }\r\n\r\n    const levelSeats = (props.statsSel.val==0 ? props.seats : props.seats.filter(seat => seat.level === props.statsSel.val));\r\n    // console.log(props.statsSel);\r\n    // console.log(props.seats);\r\n    console.log(levelSeats);\r\n    let stats = countStats(levelSeats);\r\n\r\n    return(\r\n      <div>\r\n          <Pane width={600}>\r\n              <Chart\r\n                  className={'statsChart'}\r\n                  width={600}\r\n                  height={500}\r\n                  chartType=\"PieChart\"\r\n                  loader={<div>Loading Chart</div>}\r\n                  data={[\r\n                      ['Status', 'No. of Seats'],\r\n                      ['Available', stats.avail],\r\n                      ['Reserved', stats.reserved],\r\n                      ['Occupied', stats.occupied],\r\n                      ['Hogged', stats.hogged],\r\n                      ['Unavailable', stats.unavail],\r\n                  ]}\r\n                  rootProps={{ 'data-testid': '1' }}\r\n              />\r\n          </Pane>\r\n          <h3>Total: {levelSeats.length}</h3>\r\n          <h3>Available: {stats.avail}</h3>\r\n          <h3>Reserved: {stats.reserved}</h3>\r\n          <h3>Occupied: {stats.occupied}</h3>\r\n          <h3>Hogged: {stats.hogged}</h3>\r\n          <h3>Unavailable: {stats.unavail}</h3>\r\n          <h3>Added up check: {stats.avail+stats.reserved+stats.occupied+stats.hogged+stats.unavail}</h3>\r\n      </div>\r\n    );\r\n}","D:\\Projects\\CZ3002-Lab-SmartLib\\CZ3002_Xeon\\Front-End\\src\\components\\DrawRect.js",["273","274"],"import React, {Component, useState, useEffect} from 'react'\r\n// import {Line, SteppedLine, PolyLine, Circle, Rectangle} from 'draw-shape-reactjs';\r\n// import img from '../images/mountains1.jpg'\r\n// import './parentContainerCSS.css'\r\nimport img from './Img/L3C1.jpg'\r\n\r\nclass ParentContainer extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            point1: [0, 0],\r\n            point2: [0, 0],\r\n            widthRect: 0,\r\n            heightRect: 0\r\n        }\r\n\r\n        this.init = this.init.bind(this)\r\n        this.mouseDown = this.mouseDown.bind(this)\r\n        this.mouseUp = this.mouseUp.bind(this)\r\n        this.mouseMove = this.mouseMove.bind(this)\r\n        this.draw = this.draw.bind(this)\r\n        this.drawImage = this.drawImage.bind(this)\r\n\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.canvas = document.getElementById('canvas')\r\n        this.ctx = this.canvas.getContext('2d')\r\n        this.rect = {}\r\n        this.canvasX = this.canvas.offsetLeft\r\n        this.canvasY = this.canvas.offsetTop\r\n        this.drag = false\r\n\r\n        this.init()\r\n    }\r\n\r\n    drawImage = () => {\r\n        console.log('im in drawImage')\r\n        this.backgroundImage = new Image()\r\n\r\n        this.backgroundImage.src = {\r\n            img\r\n        }\r\n\r\n        this.backgroundImage.onload = function() {\r\n            console.log('backgroundImage is loaded')\r\n            this.ctx.drawImage(this.backgroundImage, 0, 0)\r\n        }\r\n    }\r\n\r\n    init = () => {\r\n        this.canvas.addEventListener('mousedown', this.mouseDown, false)\r\n        this.canvas.addEventListener('mouseup', this.mouseUp, false)\r\n        this.canvas.addEventListener('mousemove', this.mouseMove, false)\r\n    }\r\n\r\n    mouseDown = (e) => {\r\n\r\n        this.rect.x = e.pageX - this.canvasX + 0\r\n        this.rect.y = e.pageY - this.canvasY + 0\r\n        this.rect.w = 0\r\n        this.rect.h = 0\r\n        this.setState({\r\n            point1: [this.rect.x, this.rect.y],\r\n            point2: [0, 0],\r\n            widthRect: 0,\r\n            heightRect: 0\r\n        })\r\n        // this.ctx.clearRect(0, 0, this.canvas.width, this.canvas.height)\r\n        this.drag = true\r\n    }\r\n\r\n    mouseUp = () => {\r\n        this.drag = false\r\n    }\r\n\r\n    mouseMove = (e) => {\r\n\r\n        if (this.drag) {\r\n            this.rect.w = (e.pageX - this.canvasX) - this.rect.x\r\n            this.rect.h = (e.pageY - this.canvasY) - this.rect.y\r\n            this.setState({\r\n                point2: [this.rect.x + this.rect.w, this.rect.y + this.rect.h],\r\n                point1: [this.rect.x, this.rect.y],\r\n                widthRect: Math.abs(this.rect.w),\r\n                heightRect: Math.abs(this.rect.h)\r\n            })\r\n            this.ctx.clearRect(0, 0, this.canvas.width, this.canvas.height)\r\n            this.draw()\r\n        }\r\n    }\r\n\r\n    draw = () => {\r\n        this.ctx.setLineDash([2])\r\n\r\n        this.ctx.strokeRect(this.rect.x, this.rect.y, this.rect.w, this.rect.h)\r\n    }\r\n\r\n    render() {\r\n\r\n\r\n        return ( <\r\n                div >\r\n\r\n                <\r\n                    canvas id = \"canvas\"\r\n                           width = \"800\"\r\n                           height = \"450\"\r\n                           src = {\r\n                               img\r\n                           } > < /canvas>\r\n\r\n                <\r\n                    button onClick = {\r\n                    this.drawImage\r\n                } > Draw Image < /button> <\r\n                p > < strong > (X1, Y1): < /strong> ({this.state.point1[0]}, {this.state.point1[1]})</p >\r\n                <\r\n                    p > < strong > (X2, Y2): < /strong> ({this.state.point2[0]}, {this.state.point2[1]})</p >\r\n                <\r\n                    p > < strong > Size: < /strong> ({this.state.widthRect}X{this.state.heightRect})</p >\r\n                <\r\n                    p id = 'demo' > < /p>\r\n\r\n            <\r\n      /div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ParentContainer","D:\\Projects\\CZ3002-Lab-SmartLib\\CZ3002_Xeon\\Front-End\\src\\components\\seatmap\\Seat.js",["275","276","277"],"import React, { useContext } from \"react\";\r\n// import { SeatContext } from '../../contexts/SeatContext';\r\nimport { SelectedSeatContext } from \"../../contexts/SelectSeatContext\";\r\n\r\nconst boxRx = 10;\r\nconst boxRy = 10;\r\nconst boxHeight = 70;\r\nconst boxWidth = 70;\r\nconst boxStroke = \"#909090\";\r\nconst boxStrokeSelected = \"#000000\";\r\nconst boxStrokeWidth = \"2px\";\r\nconst boxStrokeWidthSelected = \"3px\";\r\n\r\nconst colorAvailable = \"#5cd89f\";\r\nconst colorReserved = \"#f4a261\";\r\nconst colorOccupied = \"#fc5353\";\r\nconst colorHogged = \"#AAAAAA\";\r\nconst colorUnavailable = \"#28363d\";\r\nconst colorError = \"#FF0000\";\r\n\r\nfunction Seat(props) {\r\n  \r\n    //const [seats, setSeats] = useContext(SeatContext);\r\n    const [selected, setSelected] = useContext(SelectedSeatContext);\r\n\r\n    function renderColor(status, unavailable) {\r\n        if(unavailable==true)\r\n        {\r\n            return colorUnavailable;\r\n        }\r\n\r\n        switch (status) {\r\n      case \"Available\":\r\n        return colorAvailable;\r\n      case \"Reserved\":\r\n        return colorReserved;\r\n      case \"Occupied\":\r\n        return colorOccupied;\r\n      case \"Hogged\":\r\n        return colorHogged;\r\n      default:\r\n        return colorError;\r\n    }\r\n  }\r\n\r\n  function clickSeat() {\r\n    console.log(\"Clicked \" + props.seat.seatName);\r\n    //   alert(\"Clicked \" + props.seat.seatName);\r\n      setSelected({ seat: props.seat.id, level:selected.level });\r\n  }\r\n  return (\r\n    // <li>\r\n    //     {this.props.seat.xLoc} {this.props.seat.yLoc}\r\n    // </li>\r\n    <g onClick={clickSeat} cursor=\"pointer\">\r\n      <rect\r\n        x={props.seat.xLoc}\r\n        y={props.seat.yLoc}\r\n        height={boxHeight}\r\n        width={boxWidth}\r\n        rx={boxRx}\r\n        ry={boxRy}\r\n        fill={renderColor(props.seat.status, props.seat.unavailable)}\r\n        stroke={(selected.seat==props.seat.id)? boxStrokeSelected:boxStroke}\r\n        strokeWidth={(selected.seat==props.seat.id)? boxStrokeWidthSelected:boxStrokeWidth}\r\n      />\r\n      <text\r\n        className=\"seatText\"\r\n        textAnchor=\"middle\"\r\n        x={parseFloat(props.seat.xLoc) + boxWidth / 2}\r\n        y={parseFloat(props.seat.yLoc) + boxHeight / 2}\r\n        //x='10' y='10'\r\n      >\r\n        {props.seat.seatName}\r\n      </text>\r\n    </g>\r\n  );\r\n}\r\n\r\nexport default Seat;\r\n","D:\\Projects\\CZ3002-Lab-SmartLib\\CZ3002_Xeon\\Front-End\\src\\components\\seatmap\\GridLines.js",["278"],"import React, { useContext } from \"react\";\r\nimport './GridLines.css'\r\n\r\nfunction GridLines() {\r\n\r\n\r\n    return(\r\n        <g>\r\n            <line className={\"HorizontalLine\"} x1={0} x2={1280} y1={0} y2={0}/>\r\n            <line className={\"HorizontalLine\"} x1={0} x2={1280} y1={100} y2={100}/>\r\n            <line className={\"HorizontalLine\"} x1={0} x2={1280} y1={200} y2={200}/>\r\n            <line className={\"HorizontalLine\"} x1={0} x2={1280} y1={300} y2={300}/>\r\n            <line className={\"HorizontalLine\"} x1={0} x2={1280} y1={400} y2={400}/>\r\n            <line className={\"HorizontalLine\"} x1={0} x2={1280} y1={500} y2={500}/>\r\n            <line className={\"HorizontalLine\"} x1={0} x2={1280} y1={600} y2={600}/>\r\n            <line className={\"HorizontalLine\"} x1={0} x2={1280} y1={700} y2={700}/>\r\n            <line className={\"HorizontalLine\"} x1={0} x2={1280} y1={800} y2={800}/>\r\n\r\n            <line className={\"VerticalLine\"} x1={0} x2={0} y1={0} y2={800}/>\r\n            <line className={\"VerticalLine\"} x1={100} x2={100} y1={0} y2={800}/>\r\n            <line className={\"VerticalLine\"} x1={200} x2={200} y1={0} y2={800}/>\r\n            <line className={\"VerticalLine\"} x1={300} x2={300} y1={0} y2={800}/>\r\n            <line className={\"VerticalLine\"} x1={400} x2={400} y1={0} y2={800}/>\r\n            <line className={\"VerticalLine\"} x1={500} x2={500} y1={0} y2={800}/>\r\n            <line className={\"VerticalLine\"} x1={600} x2={600} y1={0} y2={800}/>\r\n            <line className={\"VerticalLine\"} x1={700} x2={700} y1={0} y2={800}/>\r\n            <line className={\"VerticalLine\"} x1={800} x2={800} y1={0} y2={800}/>\r\n            <line className={\"VerticalLine\"} x1={900} x2={900} y1={0} y2={800}/>\r\n            <line className={\"VerticalLine\"} x1={1000} x2={1000} y1={0} y2={800}/>\r\n            <line className={\"VerticalLine\"} x1={1100} x2={1100} y1={0} y2={800}/>\r\n            <line className={\"VerticalLine\"} x1={1200} x2={1200} y1={0} y2={800}/>\r\n\r\n            <text className=\"OriginText\" textAnchor=\"start\" x={0} y={25}>0</text>\r\n\r\n            <text className=\"HorizontalText\" textAnchor=\"start\" x={0} y={100}>100</text>\r\n            <text className=\"HorizontalText\" textAnchor=\"start\" x={0} y={200}>200</text>\r\n            <text className=\"HorizontalText\" textAnchor=\"start\" x={0} y={300}>300</text>\r\n            <text className=\"HorizontalText\" textAnchor=\"start\" x={0} y={400}>400</text>\r\n            <text className=\"HorizontalText\" textAnchor=\"start\" x={0} y={500}>500</text>\r\n            <text className=\"HorizontalText\" textAnchor=\"start\" x={0} y={600}>600</text>\r\n            <text className=\"HorizontalText\" textAnchor=\"start\" x={0} y={700}>700</text>\r\n            <text className=\"HorizontalText\" textAnchor=\"start\" x={0} y={800}>800</text>\r\n\r\n            <text className=\"VerticalText\" textAnchor=\"end\" x={100} y={25}>100</text>\r\n            <text className=\"VerticalText\" textAnchor=\"end\" x={200} y={25}>200</text>\r\n            <text className=\"VerticalText\" textAnchor=\"end\" x={300} y={25}>300</text>\r\n            <text className=\"VerticalText\" textAnchor=\"end\" x={400} y={25}>400</text>\r\n            <text className=\"VerticalText\" textAnchor=\"end\" x={500} y={25}>500</text>\r\n            <text className=\"VerticalText\" textAnchor=\"end\" x={600} y={25}>600</text>\r\n            <text className=\"VerticalText\" textAnchor=\"end\" x={700} y={25}>700</text>\r\n            <text className=\"VerticalText\" textAnchor=\"end\" x={800} y={25}>800</text>\r\n            <text className=\"VerticalText\" textAnchor=\"end\" x={900} y={25}>900</text>\r\n            <text className=\"VerticalText\" textAnchor=\"end\" x={1000} y={25}>1000</text>\r\n            <text className=\"VerticalText\" textAnchor=\"end\" x={1100} y={25}>1100</text>\r\n            <text className=\"VerticalText\" textAnchor=\"end\" x={1200} y={25}>1200</text>\r\n        </g>\r\n    );\r\n}\r\n\r\nexport default GridLines;","D:\\Projects\\CZ3002-Lab-SmartLib\\CZ3002_Xeon\\Front-End\\src\\components\\seatmap\\CamSeat.js",["279","280"],"import React, { useContext } from \"react\";\r\n// import { SeatContext } from '../../contexts/SeatContext';\r\nimport { SelectedSeatContext } from \"../../contexts/SelectSeatContext\";\r\n\r\nconst boxRx = 0;\r\nconst boxRy = 0;\r\nconst boxStroke = \"#000000\";\r\nconst boxStrokeSelected = \"#FF0000\";\r\nconst boxStrokeWidth = \"5px\";\r\nconst boxStrokeWidthSelected = \"8px\";\r\n\r\nfunction CamSeat(props) {\r\n\r\n    //const [seats, setSeats] = useContext(SeatContext);\r\n    const [selected, setSelected] = useContext(SelectedSeatContext);\r\n\r\n    function clickSeat() {\r\n        console.log(\"Clicked \" + props.seat.seatName);\r\n        //   alert(\"Clicked \" + props.seat.seatName);\r\n        setSelected({ seat: props.seat.id, level:selected.level });\r\n    }\r\n    return (\r\n        // <li>\r\n        //     {this.props.seat.xLoc} {this.props.seat.yLoc}\r\n        // </li>\r\n        <g onClick={clickSeat} cursor=\"pointer\">\r\n            <rect\r\n                x={props.seat.x1Img}\r\n                y={props.seat.y1Img}\r\n                height={props.seat.y2Img-props.seat.y1Img}\r\n                width={props.seat.x2Img-props.seat.x1Img}\r\n                rx={boxRx}\r\n                ry={boxRy}\r\n                fill={\"none\"}\r\n                stroke={(selected.seat==props.seat.id)? boxStrokeSelected:boxStroke}\r\n                strokeWidth={(selected.seat==props.seat.id)? boxStrokeWidthSelected:boxStrokeWidth}\r\n            />\r\n            <text\r\n                className=\"seatText\"\r\n                textAnchor=\"start\"\r\n                x={props.seat.x1Img}\r\n                y={props.seat.y1Img}\r\n                fontSize={30}\r\n                //x='10' y='10'\r\n            >\r\n                {props.seat.seatName}\r\n            </text>\r\n        </g>\r\n    );\r\n}\r\n\r\nexport default CamSeat;\r\n","D:\\Projects\\CZ3002-Lab-SmartLib\\CZ3002_Xeon\\Front-End\\src\\PrivateRoute2.js",[],"D:\\Projects\\CZ3002-Lab-SmartLib\\CZ3002_Xeon\\Front-End\\src\\PrivateRoute.js",[],"D:\\Projects\\CZ3002-Lab-SmartLib\\CZ3002_Xeon\\Front-End\\src\\context\\AuthContext.js",[],"D:\\Projects\\CZ3002-Lab-SmartLib\\CZ3002_Xeon\\Front-End\\src\\firebase.js",[],"D:\\Projects\\CZ3002-Lab-SmartLib\\CZ3002_Xeon\\Front-End\\src\\components\\AdminPage.js",["281","282","283","284"],"import React from \"react\";\r\nimport { Pane, Text, Button, Heading, Paragraph, TextInputField, FormField, TextInput} from \"evergreen-ui\";\r\nimport { Link } from \"react-router-dom\";\r\nimport background from \"./Img/ResetPwd.jpg\";\r\n\r\nfunction AdminPage() {\r\n  return (\r\n    <div>\r\n      <Pane backgroundImage = {`url(${background})`} display=\"flex\" alignItems=\"center\" justifyContent=\"center\" padding={100} flexDirection=\"column\">\r\n        <Heading fontSize={100} color = {'white'}>SmartLib</Heading>\r\n        <Text size={600} color = {'white'}><br></br><br></br><br></br>Where student meet seats</Text>\r\n      </Pane>\r\n      <Pane height={1000} backgroundColor=\"beige\" display=\"flex\" justifyContent=\"center\" padding={20}>\r\n        <form>\r\n        <Heading size={800} >Admin Page</Heading>\r\n        <Text><br></br></Text>\r\n        {/* This is the container/pane for the login section */}\r\n        <Pane display=\"flex\">\r\n          <Pane flex={1} alignItems=\"center\" display=\"flex\"></Pane> {/* In Order to keep the button on right side */}\r\n          <Pane paddingBottom={20}>\r\n            <Link to=\"/\" style={{ textDecoration: \"none\" }}> {/* textDecoration has to set to none or else the button will have a line below the Login text */}\r\n                <Button appearance=\"primary\" intent=\"success\" height={48}>Some button</Button>\r\n            </Link>\r\n          </Pane>\r\n        </Pane>\r\n        </form>\r\n      </Pane>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AdminPage;\r\n",{"ruleId":"285","severity":1,"message":"286","line":2,"column":50,"nodeType":"287","messageId":"288","endLine":2,"endColumn":54},{"ruleId":"285","severity":1,"message":"289","line":3,"column":10,"nodeType":"287","messageId":"288","endLine":3,"endColumn":15},{"ruleId":"285","severity":1,"message":"290","line":16,"column":8,"nodeType":"287","messageId":"288","endLine":16,"endColumn":17},{"ruleId":"285","severity":1,"message":"291","line":24,"column":10,"nodeType":"287","messageId":"288","endLine":24,"endColumn":14},{"ruleId":"285","severity":1,"message":"292","line":25,"column":10,"nodeType":"287","messageId":"288","endLine":25,"endColumn":15},{"ruleId":"285","severity":1,"message":"293","line":25,"column":17,"nodeType":"287","messageId":"288","endLine":25,"endColumn":25},{"ruleId":"285","severity":1,"message":"294","line":28,"column":9,"nodeType":"287","messageId":"288","endLine":28,"endColumn":14},{"ruleId":"295","severity":1,"message":"296","line":30,"column":23,"nodeType":"297","messageId":"298","endLine":30,"endColumn":25},{"ruleId":"299","replacedBy":"300"},{"ruleId":"301","replacedBy":"302"},{"ruleId":"285","severity":1,"message":"303","line":1,"column":16,"nodeType":"287","messageId":"288","endLine":1,"endColumn":24},{"ruleId":"285","severity":1,"message":"304","line":6,"column":3,"nodeType":"287","messageId":"288","endLine":6,"endColumn":12},{"ruleId":"285","severity":1,"message":"305","line":7,"column":3,"nodeType":"287","messageId":"288","endLine":7,"endColumn":17},{"ruleId":"285","severity":1,"message":"306","line":8,"column":3,"nodeType":"287","messageId":"288","endLine":8,"endColumn":12},{"ruleId":"285","severity":1,"message":"307","line":10,"column":3,"nodeType":"287","messageId":"288","endLine":10,"endColumn":13},{"ruleId":"285","severity":1,"message":"308","line":11,"column":3,"nodeType":"287","messageId":"288","endLine":11,"endColumn":12},{"ruleId":"285","severity":1,"message":"309","line":12,"column":3,"nodeType":"287","messageId":"288","endLine":12,"endColumn":15},{"ruleId":"285","severity":1,"message":"310","line":13,"column":3,"nodeType":"287","messageId":"288","endLine":13,"endColumn":11},{"ruleId":"285","severity":1,"message":"311","line":14,"column":3,"nodeType":"287","messageId":"288","endLine":14,"endColumn":18},{"ruleId":"285","severity":1,"message":"303","line":1,"column":17,"nodeType":"287","messageId":"288","endLine":1,"endColumn":25},{"ruleId":"285","severity":1,"message":"312","line":2,"column":16,"nodeType":"287","messageId":"288","endLine":2,"endColumn":20},{"ruleId":"285","severity":1,"message":"313","line":2,"column":22,"nodeType":"287","messageId":"288","endLine":2,"endColumn":28},{"ruleId":"285","severity":1,"message":"314","line":2,"column":39,"nodeType":"287","messageId":"288","endLine":2,"endColumn":55},{"ruleId":"285","severity":1,"message":"286","line":3,"column":10,"nodeType":"287","messageId":"288","endLine":3,"endColumn":14},{"ruleId":"285","severity":1,"message":"315","line":5,"column":8,"nodeType":"287","messageId":"288","endLine":5,"endColumn":16},{"ruleId":"285","severity":1,"message":"304","line":2,"column":39,"nodeType":"287","messageId":"288","endLine":2,"endColumn":48},{"ruleId":"285","severity":1,"message":"306","line":2,"column":66,"nodeType":"287","messageId":"288","endLine":2,"endColumn":75},{"ruleId":"285","severity":1,"message":"286","line":3,"column":10,"nodeType":"287","messageId":"288","endLine":3,"endColumn":14},{"ruleId":"285","severity":1,"message":"316","line":14,"column":9,"nodeType":"287","messageId":"288","endLine":14,"endColumn":16},{"ruleId":"295","severity":1,"message":"296","line":43,"column":19,"nodeType":"297","messageId":"298","endLine":43,"endColumn":21},{"ruleId":"295","severity":1,"message":"296","line":50,"column":21,"nodeType":"297","messageId":"298","endLine":50,"endColumn":23},{"ruleId":"285","severity":1,"message":"303","line":1,"column":17,"nodeType":"287","messageId":"288","endLine":1,"endColumn":25},{"ruleId":"285","severity":1,"message":"312","line":4,"column":3,"nodeType":"287","messageId":"288","endLine":4,"endColumn":7},{"ruleId":"285","severity":1,"message":"317","line":7,"column":3,"nodeType":"287","messageId":"288","endLine":7,"endColumn":11},{"ruleId":"285","severity":1,"message":"318","line":8,"column":3,"nodeType":"287","messageId":"288","endLine":8,"endColumn":13},{"ruleId":"285","severity":1,"message":"319","line":9,"column":3,"nodeType":"287","messageId":"288","endLine":9,"endColumn":12},{"ruleId":"285","severity":1,"message":"304","line":10,"column":3,"nodeType":"287","messageId":"288","endLine":10,"endColumn":12},{"ruleId":"285","severity":1,"message":"311","line":12,"column":3,"nodeType":"287","messageId":"288","endLine":12,"endColumn":18},{"ruleId":"285","severity":1,"message":"320","line":16,"column":3,"nodeType":"287","messageId":"288","endLine":16,"endColumn":10},{"ruleId":"285","severity":1,"message":"321","line":18,"column":3,"nodeType":"287","messageId":"288","endLine":18,"endColumn":23},{"ruleId":"285","severity":1,"message":"310","line":19,"column":3,"nodeType":"287","messageId":"288","endLine":19,"endColumn":11},{"ruleId":"285","severity":1,"message":"322","line":20,"column":3,"nodeType":"287","messageId":"288","endLine":20,"endColumn":12},{"ruleId":"285","severity":1,"message":"323","line":21,"column":3,"nodeType":"287","messageId":"288","endLine":21,"endColumn":17},{"ruleId":"285","severity":1,"message":"289","line":25,"column":3,"nodeType":"287","messageId":"288","endLine":25,"endColumn":8},{"ruleId":"285","severity":1,"message":"313","line":2,"column":22,"nodeType":"287","messageId":"288","endLine":2,"endColumn":28},{"ruleId":"324","severity":1,"message":"325","line":8,"column":3,"nodeType":"326","messageId":"327","endLine":10,"endColumn":4},{"ruleId":"285","severity":1,"message":"312","line":4,"column":3,"nodeType":"287","messageId":"288","endLine":4,"endColumn":7},{"ruleId":"285","severity":1,"message":"313","line":5,"column":3,"nodeType":"287","messageId":"288","endLine":5,"endColumn":9},{"ruleId":"285","severity":1,"message":"317","line":7,"column":3,"nodeType":"287","messageId":"288","endLine":7,"endColumn":11},{"ruleId":"285","severity":1,"message":"318","line":8,"column":3,"nodeType":"287","messageId":"288","endLine":8,"endColumn":13},{"ruleId":"285","severity":1,"message":"319","line":9,"column":3,"nodeType":"287","messageId":"288","endLine":9,"endColumn":12},{"ruleId":"285","severity":1,"message":"304","line":10,"column":3,"nodeType":"287","messageId":"288","endLine":10,"endColumn":12},{"ruleId":"285","severity":1,"message":"286","line":12,"column":10,"nodeType":"287","messageId":"288","endLine":12,"endColumn":14},{"ruleId":"285","severity":1,"message":"304","line":2,"column":39,"nodeType":"287","messageId":"288","endLine":2,"endColumn":48},{"ruleId":"285","severity":1,"message":"328","line":2,"column":50,"nodeType":"287","messageId":"288","endLine":2,"endColumn":59},{"ruleId":"285","severity":1,"message":"306","line":2,"column":77,"nodeType":"287","messageId":"288","endLine":2,"endColumn":86},{"ruleId":"295","severity":1,"message":"296","line":55,"column":19,"nodeType":"297","messageId":"298","endLine":55,"endColumn":21},{"ruleId":"285","severity":1,"message":"304","line":2,"column":39,"nodeType":"287","messageId":"288","endLine":2,"endColumn":48},{"ruleId":"285","severity":1,"message":"305","line":2,"column":50,"nodeType":"287","messageId":"288","endLine":2,"endColumn":64},{"ruleId":"285","severity":1,"message":"306","line":2,"column":66,"nodeType":"287","messageId":"288","endLine":2,"endColumn":75},{"ruleId":"285","severity":1,"message":"308","line":2,"column":97,"nodeType":"287","messageId":"288","endLine":2,"endColumn":106},{"ruleId":"285","severity":1,"message":"310","line":2,"column":122,"nodeType":"287","messageId":"288","endLine":2,"endColumn":130},{"ruleId":"285","severity":1,"message":"329","line":4,"column":8,"nodeType":"287","messageId":"288","endLine":4,"endColumn":18},{"ruleId":"285","severity":1,"message":"304","line":2,"column":39,"nodeType":"287","messageId":"288","endLine":2,"endColumn":48},{"ruleId":"285","severity":1,"message":"306","line":2,"column":66,"nodeType":"287","messageId":"288","endLine":2,"endColumn":75},{"ruleId":"285","severity":1,"message":"328","line":2,"column":77,"nodeType":"287","messageId":"288","endLine":2,"endColumn":86},{"ruleId":"295","severity":1,"message":"296","line":49,"column":19,"nodeType":"297","messageId":"298","endLine":49,"endColumn":21},{"ruleId":"285","severity":1,"message":"303","line":1,"column":17,"nodeType":"287","messageId":"288","endLine":1,"endColumn":25},{"ruleId":"285","severity":1,"message":"312","line":2,"column":16,"nodeType":"287","messageId":"288","endLine":2,"endColumn":20},{"ruleId":"285","severity":1,"message":"330","line":11,"column":17,"nodeType":"287","messageId":"288","endLine":11,"endColumn":25},{"ruleId":"295","severity":1,"message":"331","line":20,"column":27,"nodeType":"297","messageId":"298","endLine":20,"endColumn":29},{"ruleId":"295","severity":1,"message":"331","line":29,"column":19,"nodeType":"297","messageId":"298","endLine":29,"endColumn":21},{"ruleId":"295","severity":1,"message":"331","line":31,"column":36,"nodeType":"297","messageId":"298","endLine":31,"endColumn":38},{"ruleId":"295","severity":1,"message":"331","line":35,"column":33,"nodeType":"297","messageId":"298","endLine":35,"endColumn":35},{"ruleId":"295","severity":1,"message":"331","line":35,"column":67,"nodeType":"297","messageId":"298","endLine":35,"endColumn":69},{"ruleId":"295","severity":1,"message":"331","line":91,"column":44,"nodeType":"297","messageId":"298","endLine":91,"endColumn":46},{"ruleId":"295","severity":1,"message":"331","line":113,"column":41,"nodeType":"297","messageId":"298","endLine":113,"endColumn":43},{"ruleId":"295","severity":1,"message":"331","line":114,"column":68,"nodeType":"297","messageId":"298","endLine":114,"endColumn":70},{"ruleId":"295","severity":1,"message":"296","line":114,"column":94,"nodeType":"297","messageId":"298","endLine":114,"endColumn":96},{"ruleId":"285","severity":1,"message":"312","line":4,"column":5,"nodeType":"287","messageId":"288","endLine":4,"endColumn":9},{"ruleId":"285","severity":1,"message":"313","line":5,"column":5,"nodeType":"287","messageId":"288","endLine":5,"endColumn":11},{"ruleId":"285","severity":1,"message":"332","line":6,"column":5,"nodeType":"287","messageId":"288","endLine":6,"endColumn":12},{"ruleId":"285","severity":1,"message":"328","line":8,"column":5,"nodeType":"287","messageId":"288","endLine":8,"endColumn":14},{"ruleId":"285","severity":1,"message":"305","line":9,"column":5,"nodeType":"287","messageId":"288","endLine":9,"endColumn":19},{"ruleId":"285","severity":1,"message":"333","line":10,"column":5,"nodeType":"287","messageId":"288","endLine":10,"endColumn":12},{"ruleId":"285","severity":1,"message":"334","line":11,"column":5,"nodeType":"287","messageId":"288","endLine":11,"endColumn":14},{"ruleId":"285","severity":1,"message":"335","line":12,"column":5,"nodeType":"287","messageId":"288","endLine":12,"endColumn":15},{"ruleId":"285","severity":1,"message":"310","line":13,"column":5,"nodeType":"287","messageId":"288","endLine":13,"endColumn":13},{"ruleId":"285","severity":1,"message":"336","line":13,"column":15,"nodeType":"287","messageId":"288","endLine":13,"endColumn":25},{"ruleId":"285","severity":1,"message":"286","line":15,"column":10,"nodeType":"287","messageId":"288","endLine":15,"endColumn":14},{"ruleId":"285","severity":1,"message":"337","line":20,"column":8,"nodeType":"287","messageId":"288","endLine":20,"endColumn":12},{"ruleId":"285","severity":1,"message":"330","line":31,"column":19,"nodeType":"287","messageId":"288","endLine":31,"endColumn":27},{"ruleId":"338","severity":1,"message":"339","line":39,"column":9,"nodeType":"340","messageId":"341","endLine":50,"endColumn":10},{"ruleId":"285","severity":1,"message":"332","line":2,"column":29,"nodeType":"287","messageId":"288","endLine":2,"endColumn":36},{"ruleId":"285","severity":1,"message":"328","line":2,"column":56,"nodeType":"287","messageId":"288","endLine":2,"endColumn":65},{"ruleId":"285","severity":1,"message":"333","line":2,"column":83,"nodeType":"287","messageId":"288","endLine":2,"endColumn":90},{"ruleId":"285","severity":1,"message":"286","line":3,"column":10,"nodeType":"287","messageId":"288","endLine":3,"endColumn":14},{"ruleId":"285","severity":1,"message":"342","line":44,"column":11,"nodeType":"287","messageId":"288","endLine":44,"endColumn":25},{"ruleId":"285","severity":1,"message":"343","line":57,"column":14,"nodeType":"287","messageId":"288","endLine":57,"endColumn":24},{"ruleId":"338","severity":1,"message":"339","line":78,"column":9,"nodeType":"340","messageId":"341","endLine":87,"endColumn":10},{"ruleId":"295","severity":1,"message":"331","line":95,"column":48,"nodeType":"297","messageId":"298","endLine":95,"endColumn":50},{"ruleId":"344","severity":1,"message":"345","line":98,"column":11,"nodeType":"346","endLine":98,"endColumn":21,"suggestions":"347"},{"ruleId":"285","severity":1,"message":"332","line":6,"column":5,"nodeType":"287","messageId":"288","endLine":6,"endColumn":12},{"ruleId":"285","severity":1,"message":"328","line":8,"column":5,"nodeType":"287","messageId":"288","endLine":8,"endColumn":14},{"ruleId":"285","severity":1,"message":"286","line":15,"column":10,"nodeType":"287","messageId":"288","endLine":15,"endColumn":14},{"ruleId":"285","severity":1,"message":"348","line":20,"column":8,"nodeType":"287","messageId":"288","endLine":20,"endColumn":18},{"ruleId":"285","severity":1,"message":"349","line":24,"column":8,"nodeType":"287","messageId":"288","endLine":24,"endColumn":16},{"ruleId":"338","severity":1,"message":"339","line":79,"column":9,"nodeType":"340","messageId":"341","endLine":88,"endColumn":10},{"ruleId":"285","severity":1,"message":"350","line":3,"column":31,"nodeType":"287","messageId":"288","endLine":3,"endColumn":48},{"ruleId":"285","severity":1,"message":"351","line":8,"column":20,"nodeType":"287","messageId":"288","endLine":8,"endColumn":29},{"ruleId":"295","severity":1,"message":"331","line":19,"column":39,"nodeType":"297","messageId":"298","endLine":19,"endColumn":41},{"ruleId":"285","severity":1,"message":"352","line":5,"column":25,"nodeType":"287","messageId":"288","endLine":5,"endColumn":39},{"ruleId":"285","severity":1,"message":"350","line":3,"column":31,"nodeType":"287","messageId":"288","endLine":3,"endColumn":48},{"ruleId":"285","severity":1,"message":"351","line":8,"column":20,"nodeType":"287","messageId":"288","endLine":8,"endColumn":29},{"ruleId":"295","severity":1,"message":"331","line":19,"column":39,"nodeType":"297","messageId":"298","endLine":19,"endColumn":41},{"ruleId":"285","severity":1,"message":"303","line":1,"column":16,"nodeType":"287","messageId":"288","endLine":1,"endColumn":24},{"ruleId":"285","severity":1,"message":"353","line":24,"column":13,"nodeType":"287","messageId":"288","endLine":24,"endColumn":22},{"ruleId":"295","severity":1,"message":"331","line":27,"column":36,"nodeType":"297","messageId":"298","endLine":27,"endColumn":38},{"ruleId":"295","severity":1,"message":"331","line":30,"column":37,"nodeType":"297","messageId":"298","endLine":30,"endColumn":39},{"ruleId":"295","severity":1,"message":"331","line":31,"column":42,"nodeType":"297","messageId":"298","endLine":31,"endColumn":44},{"ruleId":"295","severity":1,"message":"331","line":32,"column":42,"nodeType":"297","messageId":"298","endLine":32,"endColumn":44},{"ruleId":"295","severity":1,"message":"331","line":33,"column":42,"nodeType":"297","messageId":"298","endLine":33,"endColumn":44},{"ruleId":"295","severity":1,"message":"331","line":40,"column":43,"nodeType":"297","messageId":"298","endLine":40,"endColumn":45},{"ruleId":"285","severity":1,"message":"303","line":1,"column":27,"nodeType":"287","messageId":"288","endLine":1,"endColumn":35},{"ruleId":"285","severity":1,"message":"354","line":1,"column":37,"nodeType":"287","messageId":"288","endLine":1,"endColumn":46},{"ruleId":"295","severity":1,"message":"331","line":27,"column":23,"nodeType":"297","messageId":"298","endLine":27,"endColumn":25},{"ruleId":"295","severity":1,"message":"331","line":64,"column":31,"nodeType":"297","messageId":"298","endLine":64,"endColumn":33},{"ruleId":"295","severity":1,"message":"331","line":65,"column":36,"nodeType":"297","messageId":"298","endLine":65,"endColumn":38},{"ruleId":"285","severity":1,"message":"355","line":1,"column":17,"nodeType":"287","messageId":"288","endLine":1,"endColumn":27},{"ruleId":"295","severity":1,"message":"331","line":35,"column":39,"nodeType":"297","messageId":"298","endLine":35,"endColumn":41},{"ruleId":"295","severity":1,"message":"331","line":36,"column":44,"nodeType":"297","messageId":"298","endLine":36,"endColumn":46},{"ruleId":"285","severity":1,"message":"304","line":2,"column":39,"nodeType":"287","messageId":"288","endLine":2,"endColumn":48},{"ruleId":"285","severity":1,"message":"305","line":2,"column":50,"nodeType":"287","messageId":"288","endLine":2,"endColumn":64},{"ruleId":"285","severity":1,"message":"306","line":2,"column":66,"nodeType":"287","messageId":"288","endLine":2,"endColumn":75},{"ruleId":"285","severity":1,"message":"328","line":2,"column":77,"nodeType":"287","messageId":"288","endLine":2,"endColumn":86},"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'Alert' is defined but never used.","'AdminPage' is defined but never used.","'user' is assigned a value but never used.","'error' is assigned a value but never used.","'setError' is assigned a value but never used.","'Login' is assigned a value but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","no-native-reassign",["356"],"no-negated-in-lhs",["357"],"'useState' is defined but never used.","'Paragraph' is defined but never used.","'TextInputField' is defined but never used.","'FormField' is defined but never used.","'BackButton' is defined but never used.","'CrossIcon' is defined but never used.","'InfoSignIcon' is defined but never used.","'EditIcon' is defined but never used.","'WarningSignIcon' is defined but never used.","'Text' is defined but never used.","'Button' is defined but never used.","'SegmentedControl' is defined but never used.","'firebase' is defined but never used.","'history' is assigned a value but never used.","'ListIcon' is defined but never used.","'IconButton' is defined but never used.","'SideSheet' is defined but never used.","'toaster' is defined but never used.","'CircleArrowRightIcon' is defined but never used.","'TrashIcon' is defined but never used.","'SmallCrossIcon' is defined but never used.","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","'TextInput' is defined but never used.","'background' is defined but never used.","'setSeats' is assigned a value but never used.","Expected '===' and instead saw '=='.","'Heading' is defined but never used.","'AddIcon' is defined but never used.","'ResetIcon' is defined but never used.","'SearchIcon' is defined but never used.","'DeleteIcon' is defined but never used.","'L5C1' is defined but never used.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","'handleCheckbox' is assigned a value but never used.","'deleteSeat' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'defaultSeat' and 'seats'. Either include them or remove the dependency array.","ArrayExpression",["358"],"'ImagePlane' is defined but never used.","'DrawRect' is defined but never used.","'SelectSeatContext' is defined but never used.","'setSelect' is assigned a value but never used.","'setplaneCoords' is assigned a value but never used.","'currSeats' is assigned a value but never used.","'useEffect' is defined but never used.","'useContext' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"359","fix":"360"},"Update the dependencies array to be: [defaultSeat, seats, selected]",{"range":"361","text":"362"},[2966,2976],"[defaultSeat, seats, selected]"]